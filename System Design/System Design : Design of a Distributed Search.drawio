<mxfile host="app.diagrams.net" modified="2024-06-21T07:04:12.569Z" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:126.0) Gecko/20100101 Firefox/126.0" etag="R7iAYI9UfRIFWAvIyJ3w" version="24.5.5" type="github">
  <diagram name="Page-1" id="8mzTLpE-g2ia8AFTpS4c">
    <mxGraphModel dx="1195" dy="1732" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-1" target="wCBr8oGpxHdbUBBWgaJ1-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-5" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-1" target="wCBr8oGpxHdbUBBWgaJ1-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-7" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-1" target="wCBr8oGpxHdbUBBWgaJ1-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;flowAnimation=1;" edge="1" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-1" target="wCBr8oGpxHdbUBBWgaJ1-8">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-1" value="&lt;font style=&quot;font-size: 15px;&quot;&gt;&lt;b&gt;&lt;i&gt;Design of a Distributed Search&lt;/i&gt;&lt;/b&gt;&lt;/font&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;fillColor=#dae8fc;strokeColor=#6c8ebf;treeFolding=1;treeMoving=1;enumerate=1;" parent="1" vertex="1">
          <mxGeometry x="240" y="320" width="200" height="80" as="geometry" />
        </mxCell>
        <UserObject label="Why do we need a search system?" tooltip="Nowadays, we see a search bar on almost every website. We use that search bar to pick out relevant content from the enormous amount of content available on that website. A search bar enables us to quickly find what we’re looking for. For example, there are plenty of courses present on the Educative website. If we didn’t have a search feature, users would have to scroll through many pages and read the name of each course to find the one they’re looking for.&#xa;Press&#xa;+&#xa;to interact&#xa;&#xa;Let’s take another example. There are billions of videos uploaded and stored on YouTube. Imagine if YouTube didn’t provide us with a search bar. How would we find a specific video among the millions of videos that have been posted on YouTube over the years? It would take months to navigate through all of those videos and find the one we need. Users find it challenging to find what they’re looking for simply by scrolling around.&#xa;&#xa;Search engines are an even bigger example. We have billions of websites on the Internet. Each website has many web pages and there is plenty of content on each of these web pages. With so much content, the Internet would practically be useless without search engines, and users would end up lost in a sea of irrelevant data. Search engines are, essentially, filters for the massive amount of data available. They let users quickly obtain information that is of true interest without having to sift through too many unnecessary web pages.&#xa;&#xa;Behind every search bar, there is a search system." id="wCBr8oGpxHdbUBBWgaJ1-2">
          <mxCell style="whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
            <mxGeometry x="160" y="120" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="What is Search System?" tooltip="A search system is a system that takes some text input, a search query, from the user and returns the relevant content in a few seconds or less. There are three main components of a search system, namely:&#xa;&#xa;    A crawler, which fetches content and creates documents.&#xa;    An indexer, which builds a searchable index.&#xa;    A searcher, which responds to search queries by running the search query on the index created by the indexer.&#xa;&#xa;The three phases of a search system&#xa;&#xa;Note: We have a separate chapter dedicated to the explanation of the crawler component. In this chapter, we’ll focus on indexing." id="wCBr8oGpxHdbUBBWgaJ1-4">
          <mxCell style="whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
            <mxGeometry x="400" y="120" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div&gt;How to design a distributed Search System?&lt;/div&gt;" tooltip="We divided the design of a distributed search system into five lessons:&#xa;&#xa;    Requirements: In this lesson, we list the functional and non-functional requirements of a distributed search system. We also estimate our system’s resources, such as servers, storage, and the bandwidth needed to serve a number of queries.&#xa;    Indexing: This lesson provides us with background knowledge on the process of indexing with the help of an example. After discussing indexing, we also look into a centralized architecture of distributed search systems.&#xa;    Initial design: This lesson consists of the high-level design of our system, its API, and the details of the indexing and searching process.&#xa;    Final design: In this lesson, we evaluate our previous design and revamp it to make it more scalable.&#xa;    Evaluation: This lesson explains how our designed distributed search system fulfills its requirements." id="wCBr8oGpxHdbUBBWgaJ1-6">
          <mxCell style="whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
            <mxGeometry x="280" y="520" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-10" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-8" target="wCBr8oGpxHdbUBBWgaJ1-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-14" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-8" target="wCBr8oGpxHdbUBBWgaJ1-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-16" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-8" target="wCBr8oGpxHdbUBBWgaJ1-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-18" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-8" target="wCBr8oGpxHdbUBBWgaJ1-17" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-3" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=1;" edge="1" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-8" target="tENt8-ajpYwqjnNaKTEu-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-8" value="&lt;b&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;&lt;i&gt;Requirements of a Distributed Search System&lt;br&gt;&lt;/i&gt;&lt;/font&gt;&lt;/b&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;fillColor=#dae8fc;strokeColor=#6c8ebf;treeFolding=1;treeMoving=1;enumerate=1;" parent="1" vertex="1">
          <mxGeometry x="880" y="320" width="240" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-20" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-9" target="wCBr8oGpxHdbUBBWgaJ1-19" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-9" value="Functional Requirements" style="whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
          <mxGeometry x="780" y="40" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-22" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-13" target="wCBr8oGpxHdbUBBWgaJ1-21" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-24" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-13" target="wCBr8oGpxHdbUBBWgaJ1-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-26" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-13" target="wCBr8oGpxHdbUBBWgaJ1-25" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-28" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-13" target="wCBr8oGpxHdbUBBWgaJ1-27" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-13" value="Non-Functional Requirements" style="whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
          <mxGeometry x="1100" y="40" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-30" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-15" target="wCBr8oGpxHdbUBBWgaJ1-29" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-32" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-15" target="wCBr8oGpxHdbUBBWgaJ1-31" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-34" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;" parent="1" source="wCBr8oGpxHdbUBBWgaJ1-15" target="wCBr8oGpxHdbUBBWgaJ1-33" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-15" value="Resource Estimation" style="whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
          <mxGeometry x="780" y="640" width="120" height="40" as="geometry" />
        </mxCell>
        <UserObject label="Building Blocks" tooltip="We need a distributed storage in our design. Therefore, we can use the blob store, a previously discussed building block, to store the data to be indexed and the index itself. We’ll use a generic term, that is, “distributed storage” instead of the specific term “blob store.”" id="wCBr8oGpxHdbUBBWgaJ1-17">
          <mxCell style="whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
            <mxGeometry x="1100" y="640" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-19" value="Search" style="ellipse;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
          <mxGeometry x="800" y="-100" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-21" value="Availability" style="ellipse;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
          <mxGeometry x="920" y="-160" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-23" value="Scalability" style="ellipse;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
          <mxGeometry x="1040" y="-160" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-25" value="Fast" style="ellipse;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
          <mxGeometry x="1200" y="-160" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wCBr8oGpxHdbUBBWgaJ1-27" value="Cost Efficient" style="ellipse;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
          <mxGeometry x="1320" y="-160" width="80" height="80" as="geometry" />
        </mxCell>
        <UserObject label="Server" tooltip="Let’s estimate the total number of servers, storage, and bandwidth that is required by the distributed search system. We’ll calculate these numbers using an example of a YouTube search.&#xa;Number of servers estimation&#xa;&#xa;To estimate the number of servers, we need to know the number of daily active users of YouTube search feature. Let’s assume that we have 150 million daily active users of YouTube utilizing the search feature. Considering our assumption of using daily active users as a proxy for the number of requests per second to find the number of servers for peak load times, we get 150 million requests per second. Then, we use the following formula to calculate the number of servers:&#xa;Servers needed at peak load=Number of requests/secondRPS of server&#xa;Servers needed at peak load=RPS of serverNumber of requests/second​&#xa;&#xa;Using 64,000 as an estimated RPS of a server from the Back-of-the-envelope Calculations chapter, the required servers are estimated as follows:&#xa;Servers needed at peak load=150 million64,000=2343.75≈2350 servers&#xa;Servers needed at peak load=64,000150 million​=2343.75≈2350 servers&#xa;&#xa;The number of servers required for the YouTube search service&#xa;&#xa;    Note: Concurrent requests significantly impact the number of required servers compared to requests spread over time." id="wCBr8oGpxHdbUBBWgaJ1-29">
          <mxCell style="ellipse;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
            <mxGeometry x="680" y="800" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Bandwidth" tooltip="The data is transferred between the user and the server on each search request. We estimate the bandwidth required for the incoming traffic on the server and the outgoing traffic from the server. Here is the formula to calculate the required bandwidth:&#xa;&#xa;Totalbandwidth=Totalrequests_second×Totalquery_size&#xa;Totalbandwidth​=Totalrequests_second​×Totalquery_size​&#xa;&#xa;Incoming traffic&#xa;&#xa;To estimate the incoming traffic bandwidth, we assume the following numbers:&#xa;&#xa;    The number of search requests per day is 150 million.&#xa;    The search query size is 100 Bytes.&#xa;&#xa;We can use the formula given above to calculate the bandwidth required for the incoming traffic.&#xa;Bandwidth Required for Incoming Search Queries per Second&#xa;&#xa;Outgoing traffic&#xa;&#xa;Outgoing traffic is the response that the server returns to the user on the search request. We assume that the number of suggested videos against a search query is 80, and one suggestion is of the size 50 Bytes. Suggestions consist of an ordered list of the video IDs.&#xa;&#xa;To estimate the outgoing traffic bandwidth, we assume the following numbers:&#xa;&#xa;    The number of search requests per day is 150 million.&#xa;    The response size is 4,000 Bytes.&#xa;&#xa;We can use the same formula to calculate the bandwidth required for the outgoing traffic.&#xa;Bandwidth Required for Outgoing Traffic per Second&#xa;Summarizing the bandwidth requirements of a video search&#xa;&#xa;    Note: The bandwidth requirements are relatively modest because we are assuming text results. Many search services can return small thumbnails and other media to enhance the search page. The bandwidth needs per page are intentionally low so that the service can provide near real-time results to the client.&#xa;&#xa;" id="wCBr8oGpxHdbUBBWgaJ1-31">
          <mxCell style="ellipse;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
            <mxGeometry x="920" y="800" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Storage" tooltip="Each video’s metadata is stored in a separate JSON document. Each document is uniquely identified by the video ID. This metadata contains the title of the video, its description, the channel name, and a transcript. We assume the following numbers for estimating the storage required to index one video:&#xa;&#xa;    The size of a single JSON document is 200 KB.&#xa;    The number of unique terms or keys extracted from a single JSON document is 1,000.&#xa;    The amount of storage space required to add one term into the index table is 100 Bytes.&#xa;&#xa;The following formula is used to compute the storage required to index one video:&#xa;&#xa;Totalstorage/video=Storage/doc+(Terms/doc×Storage/term)&#xa;Totalstorage/video​=Storage/doc​+(Terms/doc​×Storage/term​)&#xa;Total Storage Required to Index One Video on YouTube&#xa;&#xa;In the table above, we calculate the storage required to index one video. We have already seen that the total storage required per video is 300 KB. Assuming that, on average, the number of videos uploaded per day on YouTube is 6,000, let’s calculate the total storage required to index the videos uploaded per day. The following formula is used to compute the storage required to index the videos uploaded to YouTube in one day:&#xa;&#xa;Totalstorage/day=No. of videos/day×Totalstorage/video&#xa;Totalstorage/day​=No. of videos/day​×Totalstorage/video​&#xa;Total Storage Required to Index Videos per Day on YouTube&#xa;&#xa;The total storage required to index 6,000 videos uploaded per day on YouTube is 1.8 GB. This storage requirement is just an estimation for YouTube. The storage need will increase if we provide a distributed search system as a service to multiple tenants.&#xa;Summarizing the storage requirement of a distributed search system for videos uploaded to YouTube per day" id="wCBr8oGpxHdbUBBWgaJ1-33">
          <mxCell style="ellipse;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" parent="1" vertex="1">
            <mxGeometry x="800" y="800" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-5" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-2" target="tENt8-ajpYwqjnNaKTEu-4">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-7" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-2" target="tENt8-ajpYwqjnNaKTEu-6">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="&lt;b&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;&lt;i&gt;Indexing in a &lt;br&gt;Distributed Search&lt;br&gt;&lt;/i&gt;&lt;/font&gt;&lt;/b&gt;" tooltip="Indexing is the organization and manipulation of data that’s done to facilitate fast and accurate information retrieval." id="tENt8-ajpYwqjnNaKTEu-2">
          <mxCell style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;fillColor=#dae8fc;strokeColor=#6c8ebf;treeFolding=1;treeMoving=1;enumerate=1;" vertex="1" parent="1">
            <mxGeometry x="1720" y="320" width="290" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Build a Searchable Index" tooltip="The simplest way to build a searchable index is to assign a unique ID to each document and store it in a database table, as shown in the following table. The first column in the table is the ID of the text and the second column contains the text from each document.&#xa;Simple Document Index&#xa;&#xa;ID&#xa;&#x9;&#xa;&#xa;Document Content&#xa;&#xa;1&#xa;&#x9;&#xa;&#xa;Elasticsearch is the distributed and analytics engine that is based on REST APIs. &#xa;&#xa;2&#xa;&#x9;&#xa;&#xa;Elasticsearch is a Lucene library-based search engine. &#xa;&#xa;3&#xa;&#x9;&#xa;&#xa;Elasticsearch is a distributed search and analytics engine built on Apache Lucene.&#xa;&#xa;The size of the table given above would vary, depending on the number of documents we have and the size of those documents. The table above is just an example, and the content from each document only consists of one or two sentences. With an actual, real-world example, the content of every document in the table could be pages long. This would make our table quite large. Running a search query on the document-level index given above isn’t a fast process. On each search request, we have to traverse all the documents and count the occurrence of the search string in each document.&#xa;&#xa;    Note: For a fuzzy search, we also have to perform different pattern-matching queries. Many strings in the documents would somehow match the searched string. First, we must find the unique candidate strings by traversing all of the documents. Then, we must single out the most approximate matched string out of these strings. We also have to find the occurrence of the most matched string in each document. This means that each search query takes a long time.&#xa;&#xa;The response time to a search query depends on a few factors:&#xa;&#xa;    The data organization strategy in the database.&#xa;    The size of the data.&#xa;    The processing speed and the RAM of the machine that’s used to build the index and process the search query.&#xa;&#xa;Running search queries on billions of documents that are document-level indexed will be a slowprocess, which may take many minutes, or even hours. Let’s look at another data organization and processing technique that helps reduce the search time.&#xa;" id="tENt8-ajpYwqjnNaKTEu-4">
          <mxCell style="whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
            <mxGeometry x="1660" y="40" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-9" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-6" target="tENt8-ajpYwqjnNaKTEu-8">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-11" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-6" target="tENt8-ajpYwqjnNaKTEu-10">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-6" value="Algorithms" style="whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
          <mxGeometry x="1980" y="40" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-8" value="" style="ellipse;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
          <mxGeometry x="2120" y="-200" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-13" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-10" target="tENt8-ajpYwqjnNaKTEu-12">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1920" y="-280" />
              <mxPoint x="1720" y="-280" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-15" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-10" target="tENt8-ajpYwqjnNaKTEu-14">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-17" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-10" target="tENt8-ajpYwqjnNaKTEu-16">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-19" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-10" target="tENt8-ajpYwqjnNaKTEu-18">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1920" y="-280" />
              <mxPoint x="2120" y="-280" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-23" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-10" target="tENt8-ajpYwqjnNaKTEu-22">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-25" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-10" target="tENt8-ajpYwqjnNaKTEu-24">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-27" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;labelBackgroundColor=default;endArrow=classic;flowAnimation=0;" edge="1" parent="1" source="tENt8-ajpYwqjnNaKTEu-10" target="tENt8-ajpYwqjnNaKTEu-26">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Inverted Index" tooltip="An inverted index is a HashMap-like data structure that employs a document-term matrix. Instead of storing the complete document as it is, it splits the documents into individual words. After this, the document-term matrix identifies unique words and discards frequently occurring words like “to,” “they,” “the,” “is,” and so on. Frequently occurring words like those are called terms. The document-term matrix maintains a term-level index through this identification of unique words and deletion of unnecessary terms.&#xa;&#xa;For each term, the index computes the following information:&#xa;&#xa;    The list of documents in which the term appeared.&#xa;    The frequency with which the term appears in each document.&#xa;    The position of the term in each document.&#xa;&#xa;Inverted Index&#xa;&#xa;Term&#xa;&#x9;&#xa;&#xa;Mapping&#xa;&#xa;( [doc], [freq], [[loc])&#xa;&#xa;elasticsearch&#xa;&#x9;&#xa;&#xa;( [1, 2, 3], [1, 1, 1], [[1], [1], [1]] )&#xa;&#xa;distributed&#xa;&#x9;&#xa;&#xa;( [1, 3], [1, 1], [[4], [4]] )&#xa;&#xa;restful&#xa;&#x9;&#xa;&#xa;( [1], [1], [[5]] )&#xa;&#xa;search&#xa;&#x9;&#xa;&#xa;( [1, 2, 3], [1, 1, 1], [[6], [4], [5]] )&#xa;&#xa;analytics&#xa;&#x9;&#xa;&#xa;( [1, 3], [1, 1], [[8], [7]] )&#xa;&#xa;engine&#xa;&#x9;&#xa;&#xa;( [1, 2, 3], [1, 1, 1], [[9], [5], [8]] )&#xa;&#xa;heart&#xa;&#x9;&#xa;&#xa;( [1], [1], [[12]] )&#xa;&#xa;elastic&#xa;&#x9;&#xa;&#xa;( [1], [1], [[15]] )&#xa;&#xa;stack&#xa;&#x9;&#xa;&#xa;( [1], [1], [[16]] )&#xa;&#xa;lucene&#xa;&#x9;&#xa;&#xa;( [2, 3], [1, 1], [[9], [12]] )&#xa;&#xa;library&#xa;&#x9;&#xa;&#xa;( [2], [1], [[10]] )&#xa;&#xa;Apache&#xa;&#x9;&#xa;&#xa;( [3], [1], [[11]] )&#xa;&#xa;In the table above, the “Term” column contains all the unique terms that are extracted from all of the documents. Each entry in the “Mapping” column consists of three lists:&#xa;&#xa;    A list of documents in which the term appeared.&#xa;    A list that counts the frequency with which the term appears in each document.&#xa;    A two-dimensional list that pinpoints the position of the term in each document. A term can appear multiple times in a single document, which is why a two-dimensional list is used.&#xa;&#xa;    Note: Instead of lists, the mappings could also be in the form of tuples— such as doc, freq, and loc.&#xa;&#xa;Inverted index is one of the most popular index mechanisms used in document retrieval. It enables efficient implementation of boolean, extended boolean, proximity, relevance, and many other types of search algorithms.&#xa;&#xa;Advantages of using an inverted index&#xa;&#xa;    An inverted index facilitates full-text searches.&#xa;    An inverted index reduces the time of counting the occurrence of a word in each document at the run time because we have mappings against each term.&#xa;&#xa;Disadvantages of using an inverted index&#xa;&#xa;    There is storage overhead for maintaining the inverted index along with the actual documents. However, we reduce the search time.&#xa;    Maintenance costs (processing) on adding, updating, or deleting a document. To add a document, we extract terms from the document. Then, for each extracted term, we either add a new row in the inverted index or update an existing one if that term already has an entry in the inverted index. Similarly, for deleting a document, we conduct processing to find the entries in the inverted index for the deleted document’s terms and update the inverted index accordingly." id="tENt8-ajpYwqjnNaKTEu-10">
          <mxCell style="ellipse;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
            <mxGeometry x="1880" y="-200" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-12" value="Boolean" style="rhombus;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
          <mxGeometry x="1680" y="-440" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-14" value="Extended &lt;br&gt;Boolean" style="rhombus;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
          <mxGeometry x="1820" y="-440" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-16" value="Proximity" style="rhombus;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
          <mxGeometry x="1940" y="-440" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-18" value="Relevance" style="rhombus;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
          <mxGeometry x="2080" y="-440" width="80" height="80" as="geometry" />
        </mxCell>
        <UserObject label="Disadvantages" tooltip="Disadvantages of using an inverted index&#xa;&#xa;    There is storage overhead for maintaining the inverted index along with the actual documents. However, we reduce the search time.&#xa;    Maintenance costs (processing) on adding, updating, or deleting a document. To add a document, we extract terms from the document. Then, for each extracted term, we either add a new row in the inverted index or update an existing one if that term already has an entry in the inverted index. Similarly, for deleting a document, we conduct processing to find the entries in the inverted index for the deleted document’s terms and update the inverted index accordingly.&#xa;" id="tENt8-ajpYwqjnNaKTEu-22">
          <mxCell style="rhombus;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
            <mxGeometry x="2000" y="-600" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Advantages" tooltip="Advantages of using an inverted index&#xa;&#xa;    An inverted index facilitates full-text searches.&#xa;    An inverted index reduces the time of counting the occurrence of a word in each document at the run time because we have mappings against each term.&#xa;" id="tENt8-ajpYwqjnNaKTEu-24">
          <mxCell style="rhombus;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
            <mxGeometry x="1760" y="-600" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Searching from an Inverted Index" tooltip="Consider a system that has the following mappings when we search for the word “search engine:”&#xa;&#xa;Term&#xa;&#x9;&#xa;&#xa;Mapping&#xa;&#xa;search&#xa;&#x9;&#xa;&#xa;( [1, 2, 3], [1, 1, 1], [[6], [4], [5]] )&#xa;&#xa;engine&#xa;&#x9;&#xa;&#xa;( [1, 2, 3], [1, 1, 1], [[9], [5], [8]] )&#xa;&#xa;Both of these words are found in documents 1, 2, and 3. Both words appear once in each document.&#xa;&#xa;The word “search” is located at position 6 in document 1, at position 4 in document 2, and position 5 in document 3.&#xa;&#xa;The word “engine” is located at position 9 in document 1, position 5 in document 2, and position 8 in document 3.&#xa;&#xa;A single term can appear in millions of documents. Thus, the list of documents returned against a search query could be very long.&#xa;Question&#xa;&#xa;Would this technique work when too many documents are found against a single term?&#xa;Hide Answer&#xa;&#xa;It probably wouldn’t work to return all the documents that are found. Instead, we should sort them based on the relevance to the search query. The top results should be returned to the user, instead of returning all the documents.&#xa;" id="tENt8-ajpYwqjnNaKTEu-26">
          <mxCell style="rhombus;whiteSpace=wrap;html=1;fillColor=#e1d5e7;strokeColor=#9673a6;sketch=1;curveFitting=1;jiggle=2;shadow=0;rounded=1;fillStyle=cross-hatch;" vertex="1" parent="1">
            <mxGeometry x="1870" y="-700" width="100" height="100" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="tENt8-ajpYwqjnNaKTEu-28" value="" style="html=1;verticalLabelPosition=bottom;align=center;labelBackgroundColor=#ffffff;verticalAlign=top;strokeWidth=2;strokeColor=#0080F0;shadow=0;dashed=0;shape=mxgraph.ios7.icons.looking_glass;hachureGap=4;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=11;fontColor=default;" vertex="1" parent="1">
          <mxGeometry x="1940" y="-710" width="30" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
