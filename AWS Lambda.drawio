<mxfile host="app.diagrams.net" modified="2024-06-05T15:21:10.101Z" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:126.0) Gecko/20100101 Firefox/126.0" etag="0L5tOklv-TelpbGxOafK" version="24.4.13" type="github">
  <diagram name="AWS Lambda" id="c9db0220-8083-56f3-ca83-edcdcd058819">
    <mxGraphModel dx="4797" dy="4231" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1.5" pageWidth="826" pageHeight="1169" background="#ffffff" math="0" shadow="0">
      <root>
        <mxCell id="0" style=";html=1;" />
        <mxCell id="1" style=";html=1;" parent="0" />
        <mxCell id="p39owHaLg3PGn52l4rJy-1" value="Mindmap" style="swimlane;startSize=20;horizontal=1;containerType=tree;strokeColor=none;" parent="1" vertex="1">
          <mxGeometry x="410" y="720.5" width="420" height="126" as="geometry" />
        </mxCell>
        <UserObject label="AWS Lambda" tooltip="AWS Lambda is a compute service that lets you run code without provisioning or managing servers.&#xa;&#xa;Lambda runs your code on a high-availability compute infrastructure and performs all of the administration of the compute resources, including server and operating system maintenance, capacity provisioning and automatic scaling, and logging. With Lambda, all you need to do is supply your code in one of the language runtimes that Lambda supports.&#xa;&#xa;You organize your code into Lambda functions. The Lambda service runs your function only when needed and scales automatically. You only pay for the compute time that you consumeâ€”there is no charge when your code is not running." id="p39owHaLg3PGn52l4rJy-6">
          <mxCell style="ellipse;whiteSpace=wrap;html=1;align=center;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};fillColor=#dae8fc;strokeColor=#6c8ebf;fillStyle=zigzag-line;gradientColor=#387AFF;sketch=1;curveFitting=1;jiggle=2;shadow=1;" parent="p39owHaLg3PGn52l4rJy-1" vertex="1">
            <mxGeometry x="-470" y="138" width="100" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Lambda Foundations" tooltip="The Lambda function is the principal resource of the Lambda service.&#xa;&#xa;You can configure your functions using the Lambda console, Lambda API, AWS CloudFormation or AWS SAM. You create code for the function and upload the code using a deployment package. Lambda invokes the function when an event occurs. Lambda runs multiple instances of your function in parallel, governed by concurrency and scaling limits." id="p39owHaLg3PGn52l4rJy-8">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
            <mxGeometry x="1080" y="-1475" width="150" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="p39owHaLg3PGn52l4rJy-3" value="" style="edgeStyle=entityRelationEdgeStyle;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;rounded=0;" parent="1" source="p39owHaLg3PGn52l4rJy-6" target="p39owHaLg3PGn52l4rJy-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-10" value="Lambda Runtimes" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="1045" y="-390" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-5" value="" style="edgeStyle=entityRelationEdgeStyle;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;rounded=0;" parent="1" source="p39owHaLg3PGn52l4rJy-6" target="p39owHaLg3PGn52l4rJy-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-11" value="Configuring Functions" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="1840" y="370" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-12" value="Deploying Functions" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="2420" y="846.5" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-13" value="Invoking Functions" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="1840" y="1360" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-14" value="Managing Functions" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="1040" y="2130" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-15" value="Testing Functions" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="640" y="3100" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-16" value="Building with Programming Langage" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="-90" y="3490" width="230" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-17" value="Integrating Other Services" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="-1040" y="3090" width="180" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-18" value="Best Practises" style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="-1370" y="3490" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-19" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0.96;entryY=0.983;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="p39owHaLg3PGn52l4rJy-17" target="p39owHaLg3PGn52l4rJy-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-20" value="Access Permission" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="-1760" y="2130" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-21" value="Security, Goverance, &lt;br&gt;and Compliance" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="-2320" y="1390" width="150" height="40" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-22" value="Monitoring &lt;br&gt;Functions" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="-2830" y="856.5" width="100" height="40" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-23" value="Lambda Layers" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="-2290" y="190" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-24" value="Lambda Extensions" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="-1025" y="-420" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-25" value="Lambda&lt;br&gt;Applications" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="-640" y="-1480" width="110" height="40" as="geometry" />
        </mxCell>
        <mxCell id="p39owHaLg3PGn52l4rJy-26" value="Code Examples" style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="-110" y="-2280" width="130" height="30" as="geometry" />
        </mxCell>
        <UserObject label="When to use Lambda?" tooltip="Lambda is an ideal compute service for application scenarios that need to scale up rapidly, and scale down to zero when not in demand. For example, you can use Lambda for:&#xa;&#xa;    File processing: Use Amazon Simple Storage Service (Amazon S3) to trigger Lambda data processing in real time after an upload.&#xa;&#xa;    Stream processing: Use Lambda and Amazon Kinesis to process real-time streaming data for application activity tracking, transaction order processing, clickstream analysis, data cleansing, log filtering, indexing, social media analysis, Internet of Things (IoT) device data telemetry, and metering.&#xa;&#xa;    Web applications: Combine Lambda with other AWS services to build powerful web applications that automatically scale up and down and run in a highly available configuration across multiple data centers.&#xa;&#xa;    IoT backends: Build serverless backends using Lambda to handle web, mobile, IoT, and third-party API requests.&#xa;&#xa;    Mobile backends: Build backends using Lambda and Amazon API Gateway to authenticate and process API requests. Use AWS Amplify to easily integrate with your iOS, Android, Web, and React Native frontends.&#xa;&#xa;When using Lambda, you are responsible only for your code. Lambda manages the compute fleet that offers a balance of memory, CPU, network, and other resources to run your code. Because Lambda manages these resources, you cannot log in to compute instances or customize the operating system on provided runtimes.&#xa;&#xa;Lambda performs operational and administrative activities on your behalf, including managing capacity, monitoring, and logging your Lambda functions.&#xa;&#xa;If you do need to manage your compute resources, AWS has other compute services to consider, such as:&#xa;&#xa;    AWS App Runner builds and deploys containerized web applications automatically, load balances traffic with encryption, scales to meet your traffic needs, and allows for the configuration of how services are accessed and communicate with other AWS applications in a private Amazon VPC.&#xa;&#xa;    AWS Fargate with Amazon ECS runs containers without having to provision, configure, or scale clusters of virtual machines.&#xa;&#xa;    Amazon EC2 lets you customize operating system, network and security settings, and the entire software stack. You are responsible for provisioning capacity, monitoring fleet health and performance, and using Availability Zones for fault tolerance." id="VXU33mPdwi5CYUEX2S3u-1">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="-320" y="1170" width="160" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Key Features" tooltip="The following key features help you develop Lambda applications that are scalable, secure, and easily extensible:&#xa;&#xa;Environment variables&#xa;&#xa;    Use environment variables to adjust your function&#39;s behavior without updating code.&#xa;Versions&#xa;&#xa;    Manage the deployment of your functions with versions, so that, for example, a new function can be used for beta testing without affecting users of the stable production version.&#xa;Container images&#xa;&#xa;    Create a container image for a Lambda function by using an AWS provided base image or an alternative base image so that you can reuse your existing container tooling or deploy larger workloads that rely on sizable dependencies, such as machine learning.&#xa;Layers&#xa;&#xa;    Package libraries and other dependencies to reduce the size of deployment archives and makes it faster to deploy your code.&#xa;Lambda extensions&#xa;&#xa;    Augment your Lambda functions with tools for monitoring, observability, security, and governance.&#xa;Function URLs&#xa;&#xa;    Add a dedicated HTTP(S) endpoint to your Lambda function.&#xa;Response streaming&#xa;&#xa;    Configure your Lambda function URLs to stream response payloads back to clients from Node.js functions, to improve time to first byte (TTFB) performance or to return larger payloads.&#xa;Concurrency and scaling controls&#xa;&#xa;    Apply fine-grained control over the scaling and responsiveness of your production applications.&#xa;Code signing&#xa;&#xa;    Verify that only approved developers publish unaltered, trusted code in your Lambda functions&#xa;Private networking&#xa;&#xa;    Create a private network for resources such as databases, cache instances, or internal services.&#xa;File system access&#xa;&#xa;    Configure a function to mount an Amazon Elastic File System (Amazon EFS) to a local directory, so that your function code can access and modify shared resources safely and at high concurrency.&#xa;Lambda SnapStart for Java&#xa;&#xa;    Improve startup performance for Java runtimes by up to 10x at no extra cost, typically with no changes to your function code.&#xa;&#xa;" id="VXU33mPdwi5CYUEX2S3u-2">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="145" y="1170" width="110" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-17" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-4" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-18" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-5" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-19" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-6" visible="0">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1990" y="-3440" as="targetPoint" />
            <Array as="points">
              <mxPoint x="2020" y="-3440" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-20" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-7" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-21" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-8" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-22" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-9" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-23" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-10" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-24" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-11" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-26" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-13" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-27" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-15" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-28" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-14" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Concepts" tooltip="Lambda runs instances of your function to process events. You can invoke your function directly using the Lambda API, or you can configure an AWS service or resource to invoke your function." id="VXU33mPdwi5CYUEX2S3u-3">
          <mxCell style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" collapsed="1" parent="1">
            <mxGeometry x="1440" y="-3190" width="100" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Function" tooltip="A function is a resource that you can invoke to run your code in Lambda. A function has code to process the events that you pass into the function or that other AWS services send to the function." id="VXU33mPdwi5CYUEX2S3u-4">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-3630" width="90" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Trigger" tooltip="A trigger is a resource or configuration that invokes a Lambda function. Triggers include AWS services that you can configure to invoke a function and event source mappings. An event source mapping is a resource in Lambda that reads items from a stream or queue and invokes a function." id="VXU33mPdwi5CYUEX2S3u-5">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-3550" width="80" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Event" tooltip="An event is a JSON-formatted document that contains data for a Lambda function to process. The runtime converts the event to an object and passes it to your function code. When you invoke a function, you determine the structure and contents of the event.&#xa;Example custom event â€“ weather data&#xa;&#xa;{&#xa;  &quot;TemperatureK&quot;: 281,&#xa;  &quot;WindKmh&quot;: -3,&#xa;  &quot;HumidityPct&quot;: 0.55,&#xa;  &quot;PressureHPa&quot;: 1020&#xa;}&#xa;&#xa;When an AWS service invokes your function, the service defines the shape of the event.&#xa;Example service event â€“ Amazon SNS notification&#xa;&#xa;{&#xa;  &quot;Records&quot;: [&#xa;    {&#xa;      &quot;Sns&quot;: {&#xa;        &quot;Timestamp&quot;: &quot;2019-01-02T12:45:07.000Z&quot;,&#xa;        &quot;Signature&quot;: &quot;tcc6faL2yUC6dgZdmrwh1Y4cGa/ebXEkAi6RibDsvpi+tE/1+82j...65r==&quot;,&#xa;        &quot;MessageId&quot;: &quot;95df01b4-ee98-5cb9-9903-4c221d41eb5e&quot;,&#xa;        &quot;Message&quot;: &quot;Hello from SNS!&quot;,&#xa;        ..." id="VXU33mPdwi5CYUEX2S3u-6">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2005" y="-3470" width="70" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Execution &lt;br&gt;Environment" tooltip="An execution environment provides a secure and isolated runtime environment for your Lambda function. An execution environment manages the processes and resources that are required to run the function. The execution environment provides lifecycle support for the function and for any extensions associated with your function." id="VXU33mPdwi5CYUEX2S3u-7">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-3400.25" width="110" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Instruction set&lt;br&gt;Architecture" tooltip=" The instruction set architecture determines the type of computer processor that Lambda uses to run the function. Lambda provides a choice of instruction set architectures:&#xa;&#xa;    arm64 â€“ 64-bit ARM architecture, for the AWS Graviton2 processor.&#xa;&#xa;    x86_64 â€“ 64-bit x86 architecture, for x86-based processors.&#xa;" id="VXU33mPdwi5CYUEX2S3u-8">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-3320" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Deployment&lt;br&gt;Package" tooltip="You deploy your Lambda function code using a deployment package. Lambda supports two types of deployment packages:&#xa;&#xa;    A .zip file archive that contains your function code and its dependencies. Lambda provides the operating system and runtime for your function.&#xa;&#xa;    A container image that is compatible with the Open Container Initiative (OCI)&#xa;&#xa;specification. You add your function code and dependencies to the image. You must also include the operating system and a Lambda runtime." id="VXU33mPdwi5CYUEX2S3u-9">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-3240" width="100" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Runtime" tooltip="The runtime provides a language-specific environment that runs in an execution environment. The runtime relays invocation events, context information, and responses between Lambda and the function. You can use runtimes that Lambda provides, or build your own. If you package your code as a .zip file archive, you must configure your function to use a runtime that matches your programming language. For a container image, you include the runtime when you build the image." id="VXU33mPdwi5CYUEX2S3u-10">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-3150" width="90" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Layers" tooltip="A Lambda layer is a .zip file archive that can contain additional code or other content. A layer can contain libraries, a custom runtime, data, or configuration files.&#xa;&#xa;Layers provide a convenient way to package libraries and other dependencies that you can use with your Lambda functions. Using layers reduces the size of uploaded deployment archives and makes it faster to deploy your code. Layers also promote code sharing and separation of responsibilities so that you can iterate faster on writing business logic.&#xa;&#xa;You can include up to five layers per function. Layers count towards the standard Lambda deployment size quotas. When you include a layer in a function, the contents are extracted to the /opt directory in the execution environment.&#xa;&#xa;By default, the layers that you create are private to your AWS account. You can choose to share a layer with other accounts or to make the layer public. If your functions consume a layer that a different account published, your functions can continue to use the layer version after it has been deleted, or after your permission to access the layer is revoked. However, you cannot create a new function or update functions using a deleted layer version.&#xa;&#xa;Functions deployed as a container image do not use layers. Instead, you package your preferred runtime, libraries, and other dependencies into the container image when you build the image." id="VXU33mPdwi5CYUEX2S3u-11">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=#d5e8d4;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};strokeColor=#82b366;" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-3070" width="80" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Extension" tooltip="Lambda extensions enable you to augment your functions. For example, you can use extensions to integrate your functions with your preferred monitoring, observability, security, and governance tools. You can choose from a broad set of tools that AWS Lambda Partners&#xa;&#xa;provides, or you can create your own Lambda extensions.&#xa;&#xa;An internal extension runs in the runtime process and shares the same lifecycle as the runtime. An external extension runs as a separate process in the execution environment. The external extension is initialized before the function is invoked, runs in parallel with the function&#39;s runtime, and continues to run after the function invocation is complete." id="VXU33mPdwi5CYUEX2S3u-12">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-2990" width="90" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Concurrency" tooltip="Concurrency is the number of requests that your function is serving at any given time. When your function is invoked, Lambda provisions an instance of it to process the event. When the function code finishes running, it can handle another request. If the function is invoked again while a request is still being processed, another instance is provisioned, increasing the function&#39;s concurrency.&#xa;&#xa;Concurrency is subject to quotas at the AWS Region level. You can configure individual functions to limit their concurrency, or to enable them to reach a specific level of concurrency." id="VXU33mPdwi5CYUEX2S3u-13">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-2910" width="110" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Qualifier" tooltip="When you invoke or view a function, you can include a qualifier to specify a version or alias. A version is an immutable snapshot of a function&#39;s code and configuration that has a numerical qualifier. For example, my-function:1. An alias is a pointer to a version that you can update to map to a different version, or split traffic between two versions. For example, my-function:BLUE. You can use versions and aliases together to provide a stable interface for clients to invoke your function." id="VXU33mPdwi5CYUEX2S3u-14">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-2830" width="90" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Destination" tooltip="A destination is an AWS resource where Lambda can send events from an asynchronous invocation. You can configure a destination for events that fail processing. Some services also support a destination for events that are successfully processed." id="VXU33mPdwi5CYUEX2S3u-15">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" visible="0" parent="1">
            <mxGeometry x="2000" y="-2750" width="100" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-25" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0.086;entryY=1.075;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-3" target="VXU33mPdwi5CYUEX2S3u-12" visible="0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Programming &lt;br&gt;Model" tooltip="Sure, let me explain the Lambda Programming Model in a simpler manner:&#xa;&#xa;When you create a Lambda function, you need to provide an entry point, which is the part of your code that AWS Lambda should run when your function is triggered. This entry point is called the &quot;handler&quot;.&#xa;&#xa;Whenever your Lambda function is triggered (for example, by an uploaded file, an API request, or a scheduled event), AWS Lambda creates a temporary execution environment for your code to run in. This environment contains your code, any dependencies, and any data related to the event that triggered the function.&#xa;&#xa;The Lambda system passes two important pieces of information to your handler function:&#xa;&#xa;1. The event data: This is the data related to the event that triggered your function, like the details of the uploaded file or the API request that was made.&#xa;&#xa;2. The context: This provides additional information about the function execution, such as the function name, the request ID, and other metadata.&#xa;&#xa;Your handler function processes the event data and can perform any necessary actions, like processing a file, making API calls, or updating a database.&#xa;&#xa;After your handler function finishes processing the event, AWS Lambda freezes the execution environment instead of destroying it. This means that if another event triggers your function soon after, AWS Lambda can reuse the same execution environment instead of creating a new one from scratch, which saves time and resources.&#xa;&#xa;Additionally, AWS Lambda provides a temporary storage directory (/tmp) that persists between invocations of your function. This means that you can store data or reuse resources across multiple function invocations, which can help save processing time for subsequent events.&#xa;&#xa;AWS Lambda also handles logging for your function. It captures the output from your function and sends it to Amazon CloudWatch Logs. This includes logs for when the function starts and ends, as well as any errors that may occur.&#xa;&#xa;AWS Lambda automatically scales your function by running additional instances as demand increases and stopping instances as demand decreases. This means that your function instances may not be long-lived, and you should not rely on them being persistent. Instead, you should store your application&#39;s state elsewhere, such as in a database or other storage service.&#xa;&#xa;In summary, AWS Lambda creates a temporary execution environment for your code, passes the event data and context to your handler function, and keeps the environment ready for reuse to save time and resources for subsequent invocations. It also handles logging and automatic scaling for your function." id="VXU33mPdwi5CYUEX2S3u-29">
          <mxCell style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="1440" y="-2960" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Execution &lt;br&gt;Environment" tooltip=" Lambda invokes your function in an execution environment, which provides a secure and isolated runtime environment. The execution environment manages the resources required to run your function. The execution environment also provides lifecycle support for the function&#39;s runtime and any external extensions associated with your function.&#xa;&#xa;The function&#39;s runtime communicates with Lambda using the Runtime API. Extensions communicate with Lambda using the Extensions API. Extensions can also receive log messages and other telemetry from the function by using the Telemetry API.&#xa;&#xa;Architecture diagram of the execution environment.&#xa;&#xa;When you create your Lambda function, you specify configuration information, such as the amount of memory available and the maximum execution time allowed for your function. Lambda uses this information to set up the execution environment.&#xa;&#xa;The function&#39;s runtime and each external extension are processes that run within the execution environment. Permissions, resources, credentials, and environment variables are shared between the function and the extensions." id="VXU33mPdwi5CYUEX2S3u-30">
          <mxCell style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="1440" y="-2800" width="100" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-52" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-31" target="VXU33mPdwi5CYUEX2S3u-32">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Lambda Execution &lt;br&gt;Environment LifeCycle" tooltip="The Lambda execution environment lifecycle refers to the stages and processes that occur when your Lambda function is executed. Here&#39;s a simplified explanation of the Lambda execution environment lifecycle:&#xa;&#xa;1. **Initialization Phase**:&#xa;   - When your Lambda function is invoked for the first time (or after a period of inactivity), AWS Lambda creates a new execution environment.&#xa;   - It provisions the necessary compute resources (CPU, memory, etc.) and sets up the runtime environment (e.g., Node.js, Python, Java) for your function.&#xa;   - Your function&#39;s code and dependencies are loaded into the execution environment.&#xa;   - Any initialization code outside the main handler function is executed (e.g., importing libraries, establishing database connections, etc.).&#xa;&#xa;2. **Invocation Phase**:&#xa;   - Your function&#39;s handler (the entry point you specified) is called, and the event data and context information are passed to it.&#xa;   - Your handler code processes the event data and performs any necessary actions.&#xa;   - Any output from your function (e.g., logs, return values) is captured by the Lambda service.&#xa;&#xa;3. **Freezing Phase**:&#xa;   - After your function finishes processing the event, the execution environment is &quot;frozen&quot; instead of being terminated.&#xa;   - This means that the execution environment, including any initialized resources and in-memory data, is preserved in case another invocation occurs soon.&#xa;&#xa;4. **Reuse or Termination**:&#xa;   - If another invocation occurs within a certain period (typically a few minutes), the frozen execution environment is &quot;thawed&quot; and reused, skipping the initialization phase and saving time.&#xa;   - If no new invocations occur for a certain period, the execution environment is terminated, and any resources or data in it are discarded.&#xa;&#xa;5. **Repeat**:&#xa;   - For each new invocation, the process repeats, either reusing an existing execution environment or creating a new one if necessary.&#xa;&#xa;It&#39;s important to note that the execution environment is temporary and stateless. While you can reuse resources and data across invocations within the same execution environment, you should not rely on the execution environment persisting indefinitely. Instead, you should store any persistent data or state in external services like databases, object storage, or caching systems.&#xa;&#xa;The Lambda execution environment lifecycle is designed to optimize performance and resource utilization by reusing execution environments when possible, while also ensuring that your function can scale quickly by creating new environments as needed." id="VXU33mPdwi5CYUEX2S3u-31">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="1800" y="-2800" width="160" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-38" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-32" target="VXU33mPdwi5CYUEX2S3u-34">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2480" y="-2760" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-40" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;flowAnimation=1;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-32" target="VXU33mPdwi5CYUEX2S3u-39">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="INIT" tooltip="Sure, let me explain the Init phase of the Lambda execution environment lifecycle in simpler terms:&#xa;&#xa;The Init phase is the first phase when AWS Lambda creates a new execution environment for your function. During this phase, Lambda performs the following tasks:&#xa;&#xa;1. **Start all extensions**: If you&#39;re using any Lambda extensions (additional tools or utilities), Lambda starts and initializes them.&#xa;&#xa;2. **Set up the runtime environment**: Lambda sets up and prepares the runtime environment required for your function&#39;s programming language (e.g., Node.js, Python, Java).&#xa;&#xa;3. **Run your function&#39;s initialization code**: Any code in your function that is outside the main handler method (the entry point) is executed. This can include importing libraries, connecting to databases, or any other one-time setup tasks.&#xa;&#xa;4. **Run beforeCheckpoint hooks (for SnapStart only)**: If you&#39;re using the SnapStart feature, Lambda runs any special code hooks you have defined for this phase.&#xa;&#xa;The Init phase ends when the runtime environment and all extensions are ready, and they signal this to Lambda. This phase is usually limited to 10 seconds. If the initialization tasks don&#39;t complete within 10 seconds, Lambda will retry the Init phase when the function is first invoked, using the configured function timeout instead of the 10-second limit.&#xa;&#xa;However, there are exceptions to the 10-second timeout:&#xa;&#xa;- For functions using provisioned concurrency or SnapStart, the initialization code can run for up to 15 minutes or the configured function timeout (maximum 15 minutes).&#xa;- When using provisioned concurrency, Lambda initializes the execution environment when you configure the provisioned concurrency settings, not just when the function is invoked.&#xa;&#xa;After the Init phase completes, the execution environment is ready to handle invocations of your function. Each time your function is invoked, Lambda will either reuse an existing initialized execution environment or create a new one if necessary.&#xa;&#xa;For on-demand functions (not using provisioned concurrency), Lambda may occasionally initialize execution environments ahead of time, in anticipation of invocations. In these cases, there may be a gap between the initialization and invocation phases, but you shouldn&#39;t rely on this behavior." id="VXU33mPdwi5CYUEX2S3u-32">
          <mxCell style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="2440" y="-2790" width="70" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Extension INIT" tooltip="" id="VXU33mPdwi5CYUEX2S3u-33">
          <mxCell style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="2200" y="-2680" width="80" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-34" value="Runtime&lt;br&gt;INIT" style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
          <mxGeometry x="2440" y="-2680" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-35" value="Function&lt;br&gt;INIT" style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
          <mxGeometry x="2640" y="-2680" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-36" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0.829;entryY=1.042;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-32" target="VXU33mPdwi5CYUEX2S3u-33">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-37" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0.183;entryY=1.042;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-32" target="VXU33mPdwi5CYUEX2S3u-35">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-51" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;flowAnimation=1;shadow=1;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-39" target="VXU33mPdwi5CYUEX2S3u-41">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Restore Phase&lt;br&gt;(Lambda SnapStart Only)" tooltip="Restore phase (Lambda SnapStart only)&#xa;&#xa;When you first invoke a SnapStart function and as the function scales up, Lambda resumes new execution environments from the persisted snapshot instead of initializing the function from scratch. If you have an afterRestore() runtime hook, the code runs at the end of the Restore phase. You are charged for the duration of afterRestore() runtime hooks. The runtime (JVM) must load and afterRestore() runtime hooks must complete within the timeout limit (10 seconds). Otherwise, you&#39;ll get a SnapStartTimeoutException. When the Restore phase completes, Lambda invokes the function handler (the Invoke phase).&#xa;Failures during the Restore phase&#xa;&#xa;If the Restore phase fails, Lambda emits error information in the RESTORE_REPORT log.&#xa;Example â€” RESTORE_REPORT log for timeout&#xa;&#xa;RESTORE_REPORT Restore Duration: 1236.04 ms Status: timeout&#xa;&#xa;Example â€” RESTORE_REPORT log for runtime hook failure&#xa;&#xa;RESTORE_REPORT Restore Duration: 1236.04 ms Status: error Error Type: Runtime.ExitError" id="VXU33mPdwi5CYUEX2S3u-39">
          <mxCell style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="2760" y="-2790" width="160" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-43" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-41" target="VXU33mPdwi5CYUEX2S3u-42">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Invoke Phase" tooltip="Invoke phase&#xa;&#xa;When a Lambda function is invoked in response to a Next API request, Lambda sends an Invoke event to the runtime and to each extension.&#xa;&#xa;The function&#39;s timeout setting limits the duration of the entire Invoke phase. For example, if you set the function timeout as 360 seconds, the function and all extensions need to complete within 360 seconds. Note that there is no independent post-invoke phase. The duration is the sum of all invocation time (runtime + extensions) and is not calculated until the function and all extensions have finished executing.&#xa;&#xa;The invoke phase ends after the runtime and all extensions signal that they are done by sending a Next API request." id="VXU33mPdwi5CYUEX2S3u-41">
          <mxCell style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="3070" y="-2790" width="130" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-45" value="" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0.508;entryY=-0.083;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-42" target="VXU33mPdwi5CYUEX2S3u-44">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-42" value="&lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtime-environment.html#runtimes-lifecycle&quot;&gt;Failures during &lt;br&gt;Invoke Phase&lt;/a&gt;" style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
          <mxGeometry x="3075" y="-2685" width="120" height="50" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-44" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" vertex="1" parent="1">
          <mxGeometry x="2895" y="-2600" width="480" height="60.18" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-49" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-46" target="VXU33mPdwi5CYUEX2S3u-48">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Shutdown Phase" tooltip="When Lambda is about to shut down the runtime, it sends a Shutdown event to each registered external extension. Extensions can use this time for final cleanup tasks. The Shutdown event is a response to a Next API request.&#xa;&#xa;Duration: The entire Shutdown phase is capped at 2 seconds. If the runtime or any extension does not respond, Lambda terminates it via a signal (SIGKILL).&#xa;&#xa;After the function and all extensions have completed, Lambda maintains the execution environment for some time in anticipation of another function invocation. However, Lambda terminates execution environments every few hours to allow for runtime updates and maintenanceâ€”even for functions that are invoked continuously. You should not assume that the execution environment will persist indefinitely. For more information, see Implementing statelessness in functions.&#xa;&#xa;When the function is invoked again, Lambda thaws the environment for reuse. Reusing the execution environment has the following implications:&#xa;&#xa;    Objects declared outside of the function&#39;s handler method remain initialized, providing additional optimization when the function is invoked again. For example, if your Lambda function establishes a database connection, instead of reestablishing the connection, the original connection is used in subsequent invocations. We recommend adding logic in your code to check if a connection exists before creating a new one.&#xa;&#xa;    Each execution environment provides between 512 MB and 10,240 MB, in 1-MB increments, of disk space in the /tmp directory. The directory content remains when the execution environment is frozen, providing a transient cache that can be used for multiple invocations. You can add extra code to check if the cache has the data that you stored. For more information on deployment size limits, see Lambda quotas.&#xa;&#xa;    Background processes or callbacks that were initiated by your Lambda function and did not complete when the function ended resume if Lambda reuses the execution environment. Make sure that any background processes or callbacks in your code are complete before the code exits.&#xa;" id="VXU33mPdwi5CYUEX2S3u-46">
          <mxCell style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="3500" y="-2790" width="140" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Implementing statelessness in functions" tooltip="When writing your Lambda function code, treat the execution environment as stateless, assuming that it only exists for a single invocation. Lambda terminates execution environments every few hours to allow for runtime updates and maintenanceâ€”even for functions that are invoked continuously. Initialize any required state (for example, fetching a shopping cart from an Amazon DynamoDB table) when your function starts. Before exiting, commit permanent data changes to durable stores like Amazon Simple Storage Service (Amazon S3), DynamoDB, or Amazon Simple Queue Service (Amazon SQS). Avoid relying on existing data structures, temporary files, or state that spans invocations, such as counters or aggregates. This ensures that your function handles each invocation independently." id="VXU33mPdwi5CYUEX2S3u-48">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="3795" y="-2790" width="250" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-50" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;flowAnimation=1;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-41" target="VXU33mPdwi5CYUEX2S3u-46">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-62" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-53" target="VXU33mPdwi5CYUEX2S3u-54">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-63" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-53" target="VXU33mPdwi5CYUEX2S3u-56">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Deployment &lt;br&gt;Packages" tooltip="Your AWS Lambda function&#39;s code consists of scripts or compiled programs and their dependencies. You use a deployment package to deploy your function code to Lambda. Lambda supports two types of deployment packages: container images and .zip file archives. " id="VXU33mPdwi5CYUEX2S3u-53">
          <mxCell style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="1440" y="-2400" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Container&lt;br&gt;Images" tooltip="A container image includes the base operating system, the runtime, Lambda extensions, your application code and its dependencies. You can also add static data, such as machine learning models, into the image.&#xa;&#xa;Lambda provides a set of open-source base images that you can use to build your container image. To create and test container images, you can use the AWS Serverless Application Model (AWS SAM) command line interface (CLI) or native container tools such as the Docker CLI.&#xa;&#xa;Upload your container images to Amazon Elastic Container Registry (Amazon ECR), a managed AWS container image registry service. To deploy the image to your function, specify the Amazon ECR image URL using the Lambda console, the Lambda API, command line tools, or the AWS SDKs." id="VXU33mPdwi5CYUEX2S3u-54">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="1635" y="-2520" width="90" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-57" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=1;entryY=1;entryDx=0;entryDy=0;flowAnimation=1;dashed=1;dashPattern=8 8;flowAnimationDirection=alternate-reverse;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-55" target="VXU33mPdwi5CYUEX2S3u-56">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label=".zip file &lt;br&gt;Archive" tooltip="A .zip file archive includes your application code and its dependencies. When you author functions using the Lambda console or a toolkit, Lambda automatically creates a .zip file archive of your code.&#xa;&#xa;When you create functions with the Lambda API, command line tools, or the AWS SDKs, you must create a deployment package. You must also create a deployment package if your function uses a compiled language, or to add dependencies to your function. To deploy your function&#39;s code, upload the deployment package from Amazon Simple Storage Service (Amazon S3) or your local machine.&#xa;&#xa;You can upload a .zip file as your deployment package using the Lambda console, AWS Command Line Interface (AWS CLI), or to an Amazon Simple Storage Service (Amazon S3) bucket." id="VXU33mPdwi5CYUEX2S3u-55">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="1640" y="-2400" width="80" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Layers" tooltip="If you deploy your function code using a .zip file archive, you can use Lambda layers as a distribution mechanism for libraries, custom runtimes, and other function dependencies. Layers enable you to manage your in-development function code independently from the unchanging code and resources that it uses. You can configure your function to use layers that you create, layers that AWS provides, or layers from other AWS customers.&#xa;&#xa;You can&#39;t use layers with container images. Instead, package your preferred runtime, libraries, and other dependencies into the container image when you build the image." id="VXU33mPdwi5CYUEX2S3u-56">
          <mxCell style="whiteSpace=wrap;html=1;shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];fillColor=none;align=center;verticalAlign=bottom;routingCenterY=0.5;snapToPoint=1;recursiveResize=0;autosize=1;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
            <mxGeometry x="1640" y="-2270" width="80" height="30" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-58" value="AWS SAM &lt;br&gt;to create deployment packages &amp;amp; &lt;br&gt;S3 to host deployment packages &amp;gt; 50 MB" style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" vertex="1" parent="1">
          <mxGeometry x="1780" y="-2440" width="322.25" height="40" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-59" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0.063;entryY=1.014;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-54" target="VXU33mPdwi5CYUEX2S3u-58">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-60" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;entryX=0.083;entryY=-0.038;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-55" target="VXU33mPdwi5CYUEX2S3u-58">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VXU33mPdwi5CYUEX2S3u-61" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;" edge="1" parent="1" source="VXU33mPdwi5CYUEX2S3u-53">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1640" y="-2360" as="targetPoint" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
