<mxfile host="app.diagrams.net" modified="2024-07-02T04:14:16.796Z" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:126.0) Gecko/20100101 Firefox/126.0" etag="VLTzkEwZrQfYFPEXw5YD" version="24.6.4" type="github" pages="3">
  <diagram name="Introducing Google Cloud" id="m140OX7gJDVnHVPhYppR">
    <mxGraphModel dx="1026" dy="688" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="ZB4kWbe82F2Engg8KSVr-1" value="Introducing Google Cloud" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;hachureGap=4;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="360" y="520" width="200" height="80" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="MR8tB_YX9_QbjrZ4hQh_" name="Resource and Access in Cloud">
    <mxGraphModel dx="2735" dy="2175" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;" edge="1" parent="1" source="kPhYTnK1E6m5oxsVBe5k-2" target="kPhYTnK1E6m5oxsVBe5k-4">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="480" y="480" />
              <mxPoint x="280" y="480" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-20" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;labelBackgroundColor=none;endArrow=classic;" edge="1" parent="1" source="kPhYTnK1E6m5oxsVBe5k-2" target="kPhYTnK1E6m5oxsVBe5k-19">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="480" y="480" />
              <mxPoint x="680" y="480" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-25" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;labelBackgroundColor=none;endArrow=classic;" edge="1" parent="1" source="kPhYTnK1E6m5oxsVBe5k-2" target="kPhYTnK1E6m5oxsVBe5k-24">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="480" y="640" />
              <mxPoint x="840" y="640" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-35" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;labelBackgroundColor=none;endArrow=classic;" edge="1" parent="1" source="kPhYTnK1E6m5oxsVBe5k-2" target="kPhYTnK1E6m5oxsVBe5k-34">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-39" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;labelBackgroundColor=none;endArrow=classic;" edge="1" parent="1" source="kPhYTnK1E6m5oxsVBe5k-2" target="kPhYTnK1E6m5oxsVBe5k-38">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="480" y="640" />
              <mxPoint x="160" y="640" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-2" value="&lt;font style=&quot;font-size: 23px;&quot;&gt;Resources &amp;amp; &lt;br&gt;Access in Cloud&lt;br&gt;&lt;/font&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;hachureGap=4;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="360" y="520" width="240" height="80" as="geometry" />
        </mxCell>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-3" value="&lt;div style=&quot;font-size: 18px;&quot; align=&quot;justify&quot;&gt;&lt;h3 class=&quot;css-13hhzop&quot; tabindex=&quot;-1&quot;&gt;Learning Objectives&lt;/h3&gt;&lt;hr class=&quot;cds-858 cds-Divider-dark css-yc753g&quot; aria-hidden=&quot;true&quot;&gt;&lt;ul&gt;&lt;li data-collapsible=&quot;false&quot;&gt;Define the purpose of and use cases for IAM.&lt;/li&gt;&lt;li data-collapsible=&quot;false&quot;&gt;List the methods of interaction with Google Cloud.&lt;/li&gt;&lt;li data-collapsible=&quot;false&quot;&gt;Use Cloud Marketplace to interact with Google Cloud.&lt;/li&gt;&lt;li data-collapsible=&quot;true&quot;&gt;Identify the purpose of projects on Google Cloud.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;" vertex="1" parent="1">
          <mxGeometry x="-420" width="500" height="200" as="geometry" />
        </mxCell>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-7" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;" edge="1" parent="1" source="kPhYTnK1E6m5oxsVBe5k-4" target="kPhYTnK1E6m5oxsVBe5k-6">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Google Cloud Hierarchy" tooltip="In this section of the course, we are learning about the structure of Google Cloud. Google Cloud has four levels in its resource hierarchy: resources, projects, folders, and an organization node.&#xa;&#xa;    Resources: These are things like virtual machines, Cloud Storage buckets, or tables in BigQuery. They are organized into projects.&#xa;    Projects: Projects are the basis for using Google Cloud services. Each project is a separate entity and has a unique project ID, name, and number. Projects can have different owners and users.&#xa;    Folders: Folders allow you to group projects and other folders together. They help you assign policies and permissions to resources at a level of your choice. Resources in a folder inherit policies and permissions from that folder.&#xa;    Organization Node: This is the top level of the hierarchy and encompasses all the projects, folders, and resources in your organization. It has special roles associated with it, like organization policy administrator and project creator.&#xa;&#xa;Understanding this hierarchy is important because it helps you manage and apply policies when using Google Cloud. Policies can be defined at the project, folder, and organization node levels. Some services also allow policies to be applied to individual resources. Policies are inherited downward, so if you apply a policy to a folder, it will apply to all the projects within that folder." id="kPhYTnK1E6m5oxsVBe5k-4">
          <mxCell style="whiteSpace=wrap;html=1;fontFamily=Architects Daughter;hachureGap=4;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
            <mxGeometry x="220" y="360" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Questions" tooltip="Here are some practice questions related to the topic of the resource hierarchy in Google Cloud:&#xa;&#xa;    What are the four levels in Google Cloud&#39;s resource hierarchy?&#xa;    How are resources organized in Google Cloud?&#xa;    What is the purpose of projects in Google Cloud?&#xa;    What are the three identifying attributes of a Google Cloud project?&#xa;    How are policies managed and applied in Google Cloud?&#xa;    What is the role of folders in the resource hierarchy?&#xa;    How do resources inherit policies and permissions from folders?&#xa;    What is the organization node in Google Cloud, and what is its significance?&#xa;    What are some special roles associated with the organization node?&#xa;    How can you create a new organization node in Google Cloud?" id="kPhYTnK1E6m5oxsVBe5k-6">
          <mxCell style="rhombus;whiteSpace=wrap;html=1;fontFamily=Architects Daughter;hachureGap=4;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
            <mxGeometry x="240" y="200" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;Can you explain the difference between a service account and a regular Google account?&lt;/p&gt;&lt;/div&gt;" tooltip="Here&#39;s the difference between a service account and a regular Google account:&#xa;&#xa;Service Account:&#xa;&#xa;    Purpose: Service accounts are used to authenticate applications or services running in virtual machines (VMs) or other systems to access cloud resources in Google Cloud Platform (GCP).&#xa;    Authentication: Service accounts use cryptographic keys instead of passwords for authentication.&#xa;    Access Control: Service accounts are associated with specific roles or permissions that determine what actions the application can perform on cloud resources.&#xa;    Resource Management: Service accounts are considered as resources in GCP and can have their own Identity and Access Management (IAM) policies attached to them.&#xa;    Use Case: Service accounts are typically used for machine-to-machine communication and are not intended for interactive use by humans.&#xa;&#xa;Regular Google Account:&#xa;&#xa;    Purpose: Regular Google accounts are intended for individual users to access various Google services like Gmail, Google Drive, and Google Calendar.&#xa;    Authentication: Regular Google accounts use passwords for authentication.&#xa;    Access Control: Regular Google accounts have their own set of permissions and access controls for different Google services.&#xa;    Resource Management: Regular Google accounts do not have the same level of resource management capabilities as service accounts in GCP.&#xa;    Use Case: Regular Google accounts are used by individuals for personal or professional use to access Google services and interact with them.&#xa;&#xa;In summary, service accounts are specifically designed for machine-to-machine communication and provide controlled access to cloud resources, while regular Google accounts are for individual users to access various Google services." id="kPhYTnK1E6m5oxsVBe5k-9">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="660" y="920" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;How can service accounts be managed and what roles can be assigned to them?&lt;/p&gt;&lt;/div&gt;" tooltip="Service accounts in Google Cloud Platform (GCP) can be managed and assigned different roles just like any other GCP resource. Here&#39;s how service accounts can be managed and the roles that can be assigned to them:&#xa;&#xa;    IAM Policies: Service accounts are considered as resources in GCP, which means they can have their own Identity and Access Management (IAM) policies attached to them. IAM policies control who has what level of access to the service account.&#xa;&#xa;    Roles: Different roles can be assigned to service accounts to grant specific permissions. Some of the roles that can be assigned to service accounts include:&#xa;        Viewer: Allows viewing information about the service account.&#xa;        Editor: Allows managing the service account, including updating its IAM policies.&#xa;        Owner: Provides full control over the service account, including managing its IAM policies and deleting it.&#xa;        Service Account User: Allows using the service account to authenticate and access resources.&#xa;        Compute Instance Admin: Grants the ability to create, modify, and delete Compute Engine instances using the service account.&#xa;        Storage Object Admin: Provides read and write access to Cloud Storage objects using the service account.&#xa;&#xa;    Granular Permissions: In addition to roles, you can also assign granular permissions to service accounts. This allows you to define custom access control for specific resources or actions.&#xa;&#xa;By managing IAM policies and assigning appropriate roles to service accounts, you can control who can manage the service account, view its information, and use it to access cloud resources. This allows for fine-grained access control and security management in GCP." id="kPhYTnK1E6m5oxsVBe5k-10">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="660" y="1000" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;Can you explain how service accounts are used to authenticate virtual machines to access cloud resources?&lt;/p&gt;&lt;/div&gt;" tooltip="Service accounts are used to authenticate virtual machines (VMs) to access cloud resources in Google Cloud Platform (GCP). Here&#39;s how it works:&#xa;&#xa;    Create a Service Account: First, you create a service account in GCP. A service account is named with an email address and is associated with a specific project.&#xa;&#xa;    Grant Permissions: Once the service account is created, you can grant it specific roles or permissions. These roles determine what actions the application running in the VM, authenticated by the service account, can perform.&#xa;&#xa;    Associate the Service Account with a VM: Next, you associate the service account with the VM that needs to access cloud resources. This can be done during VM creation or by modifying the VM&#39;s settings later.&#xa;&#xa;    Authenticate with Cryptographic Keys: When the VM needs to access a cloud resource, it uses the service account&#39;s cryptographic keys to authenticate itself. These keys are securely stored and managed by GCP.&#xa;&#xa;    Access Cloud Resources: Once the VM is authenticated, it can access the specified cloud resources based on the permissions granted to the associated service account. For example, if the service account has been granted access to Cloud Storage, the VM can read from or write to that storage bucket.&#xa;&#xa;By using service accounts, you can ensure that only authorized VMs have access to specific cloud resources. It provides a secure and controlled way for applications running in VMs to interact with GCP services.&#xa;" id="kPhYTnK1E6m5oxsVBe5k-11">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="660" y="960" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;Can you explain how a Service Account is used and assigned roles in Google Cloud IAM?&lt;/p&gt;&lt;/div&gt;" tooltip="A Service Account is a special type of account used by applications, services, or virtual machines to authenticate and interact with Google Cloud APIs. Here&#39;s how a Service Account is used and assigned roles in Google Cloud IAM:&#xa;&#xa;    Creating a Service Account:&#xa;        To use a Service Account, you first need to create one in the Google Cloud Console.&#xa;        When creating a Service Account, you can specify a name and ID for the account.&#xa;        You can also add optional metadata to provide additional information about the account.&#xa;&#xa;    Assigning Roles to a Service Account:&#xa;        After creating a Service Account, you can assign roles to it to define the permissions it has within Google Cloud.&#xa;        Roles determine what actions the Service Account can perform on which resources.&#xa;        Google Cloud IAM provides a wide range of predefined roles that you can assign to a Service Account.&#xa;        Predefined roles are specific to Google Cloud services and offer predefined sets of permissions.&#xa;        You can assign predefined roles at the project, folder, or organization level, depending on your needs.&#xa;        Additionally, you can create custom roles with specific sets of permissions tailored to your requirements and assign them to the Service Account.&#xa;&#xa;    Authenticating as a Service Account:&#xa;        To authenticate as a Service Account, you need to obtain the Service Account&#39;s credentials.&#xa;        These credentials typically include a private key file or a JSON key file associated with the Service Account.&#xa;        The private key file contains the necessary information to authenticate and authorize requests made by the Service Account.&#xa;        Applications or services can use these credentials to authenticate themselves when interacting with Google Cloud APIs.&#xa;&#xa;    Interacting with Google Cloud APIs:&#xa;        Once authenticated, the Service Account can make API requests to interact with Google Cloud resources.&#xa;        The Service Account&#39;s assigned roles determine the actions it can perform on the resources.&#xa;        For example, a Service Account with the &quot;Compute Instance Admin&quot; role can manage virtual machine instances within a project.&#xa;&#xa;By using Service Accounts and assigning roles to them, you can control and manage the permissions granted to applications, services, or virtual machines within Google Cloud. This allows you to securely authenticate and authorize these entities to interact with Google Cloud resources on your behalf." id="kPhYTnK1E6m5oxsVBe5k-12">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#e1d5e7;strokeColor=#9673a6;fillStyle=solid;direction=west;gradientDirection=north;shadow=0;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="500" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;How does IAM handle conflicts between allow and deny policies? Can you explain the order of evaluation?&lt;/p&gt;&lt;/div&gt;" tooltip="Coach&#xa;&#xa;IAM handles conflicts between allow and deny policies by following a specific order of evaluation. Here&#39;s an explanation of the order of evaluation:&#xa;&#xa;    Deny Policies:&#xa;        IAM always checks relevant deny policies first before checking allow policies.&#xa;        If a deny policy exists that explicitly denies a specific permission, it takes precedence over any allow policies.&#xa;        If a deny policy is applicable to an identity, the denied permission will be denied regardless of any allow policies that may grant the same permission.&#xa;&#xa;    Allow Policies:&#xa;        If no relevant deny policies are found, IAM then checks the allow policies.&#xa;        Allow policies grant permissions to identities based on the roles assigned to them.&#xa;        If an allow policy grants a specific permission, the identity will be allowed to perform that action on the resource.&#xa;&#xa;    Inheritance:&#xa;        IAM policies are inherited through the resource hierarchy.&#xa;        When a policy is applied at a higher level, such as a project, it applies to all resources within that project and any child resources within folders or projects.&#xa;        This means that if a policy is set at a higher level, it will affect the permissions of resources below it in the hierarchy.&#xa;&#xa;By following this order of evaluation, IAM ensures that deny policies take precedence over allow policies. This allows for fine-grained control over access to resources and helps enforce security and access management policies within Google Cloud." id="kPhYTnK1E6m5oxsVBe5k-13">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="500" y="160" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;What are the different types of identities that can be assigned roles and permissions in Google Cloud IAM?&lt;/p&gt;&lt;/div&gt;" tooltip="Coach&#xa;&#xa;In Google Cloud IAM, there are several types of identities that can be assigned roles and permissions. These identities represent entities that can perform actions within Google Cloud. Here are the different types of identities:&#xa;&#xa;    Google Account:&#xa;        A Google Account represents an individual user and is associated with an email address.&#xa;        It can be a personal Google Account or a Google Workspace (formerly G Suite) account.&#xa;        Google Accounts can be assigned roles and permissions to access and manage resources within Google Cloud.&#xa;&#xa;    Google Group:&#xa;        A Google Group is a collection of Google Accounts or other Google Groups.&#xa;        It allows you to manage access to resources for multiple users at once.&#xa;        By assigning roles and permissions to a Google Group, you can grant access to all members of the group.&#xa;&#xa;    Service Account:&#xa;        A Service Account is a special type of account used by applications, services, or virtual machines to authenticate and interact with Google Cloud APIs.&#xa;        Service Accounts are associated with a unique email address and have their own set of credentials.&#xa;        They can be assigned roles and permissions to access and manage resources within Google Cloud on behalf of the application or service they represent.&#xa;&#xa;    Cloud Identity Domain:&#xa;        A Cloud Identity Domain represents an organization&#39;s identity and access management system.&#xa;        It allows you to manage users, groups, and other resources within your organization.&#xa;        Cloud Identity Domains can be integrated with Google Cloud IAM to assign roles and permissions to users and groups within the domain.&#xa;&#xa;These different types of identities provide flexibility in managing access control within Google Cloud. By assigning roles and permissions to these identities, you can control who can do what on which resources, ensuring proper security and access management." id="kPhYTnK1E6m5oxsVBe5k-14">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="500" y="120" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;Can you explain the difference between basic, predefined, and custom roles in IAM?&lt;/p&gt;&lt;/div&gt;" tooltip="In Google Cloud IAM, there are three types of roles: basic, predefined, and custom. Here&#39;s an explanation of each type:&#xa;&#xa;    Basic Roles:&#xa;        Basic roles are broad in scope and affect all resources within a project.&#xa;        They provide a convenient way to assign common sets of permissions to users.&#xa;        Examples of basic roles include owner, editor, viewer, and billing administrator.&#xa;        Project viewers can access resources but cannot make changes.&#xa;        Project editors can access and make changes to resources.&#xa;        Project owners have the same access as editors, but they can also manage roles, permissions, and billing.&#xa;        Billing administrators have permissions to manage billing for a project but cannot make changes to resources.&#xa;        Basic roles are suitable for scenarios where a user needs broad access to resources within a project.&#xa;&#xa;    Predefined Roles:&#xa;        Predefined roles are specific to Google Cloud services and offer predefined sets of permissions.&#xa;        Each Google Cloud service may have its own set of predefined roles.&#xa;        These roles define a specific set of actions that can be performed on resources within that service.&#xa;        Examples of predefined roles include &quot;Compute Instance Admin&quot; or &quot;Storage Object Viewer.&quot;&#xa;        Predefined roles can be assigned at the project, folder, or organization level.&#xa;        They provide a more granular level of access control compared to basic roles.&#xa;        Predefined roles are suitable when you need to assign specific permissions for a particular Google Cloud service.&#xa;&#xa;    Custom Roles:&#xa;        Custom roles allow you to define roles with specific sets of permissions tailored to your needs.&#xa;        You can create custom roles at the project or organization level.&#xa;        With custom roles, you have fine-grained control over the permissions assigned to users.&#xa;        This allows you to follow the principle of least privilege, granting users only the permissions they require to perform their tasks.&#xa;        Custom roles are useful when predefined roles do not meet your specific requirements.&#xa;        However, managing custom roles requires additional effort as you need to define and maintain the permissions associated with the role.&#xa;&#xa;In summary, basic roles provide broad access to resources within a project, predefined roles offer predefined sets of permissions for specific Google Cloud services, and custom roles allow you to define roles with specific permissions tailored to your needs." id="kPhYTnK1E6m5oxsVBe5k-15">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="500" y="40" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;Can you explain the concept of Identity and Access Management (IAM) in Google Cloud?&lt;/p&gt;&lt;/div&gt;" tooltip="In Google Cloud, Identity and Access Management (IAM) is a service that allows you to manage access control and permissions for resources within your cloud environment. IAM helps you control who (identity) can do what (access) on which resources.&#xa;&#xa;Here&#39;s a breakdown of the key concepts in IAM:&#xa;&#xa;    Identity: An identity represents an entity that can perform actions within Google Cloud. This can be a Google account, a Google group, a service account, or a Cloud Identity domain. Each identity has a unique identifier, typically an email address.&#xa;&#xa;    Roles: A role is a collection of permissions that determine what actions an identity can perform on resources. Google Cloud provides three types of roles: basic, predefined, and custom.&#xa;&#xa;        Basic roles: These roles have broad scopes and affect all resources within a project. Examples include owner, editor, viewer, and billing administrator.&#xa;&#xa;        Predefined roles: These roles are specific to Google Cloud services and offer predefined sets of permissions. For example, the &quot;Compute Instance Admin&quot; role allows managing virtual machine instances.&#xa;&#xa;        Custom roles: These roles are created by you and allow you to define specific sets of permissions tailored to your needs. Custom roles can only be applied at the project or organization level.&#xa;&#xa;    IAM Policies: IAM policies are used to assign roles to identities and control access to resources. A policy consists of a set of permissions and the identities to which those permissions are granted. Policies can be applied at different levels of the resource hierarchy, such as project, folder, or organization.&#xa;&#xa;    Inheritance: IAM policies are inherited through the resource hierarchy. When a policy is applied at a higher level, such as a project, it applies to all resources within that project and any child resources within folders or projects.&#xa;&#xa;    Deny Policies: IAM allows the use of deny policies to explicitly deny certain permissions to specific identities. Deny policies take precedence over allow policies, ensuring that denied permissions are not granted, even if they are included in an allow policy.&#xa;&#xa;By effectively using IAM, you can manage access to your Google Cloud resources, enforce the principle of least privilege, and ensure that only authorized individuals or entities have the necessary permissions to perform actions within your cloud environment." id="kPhYTnK1E6m5oxsVBe5k-16">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="500" y="80" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;Can you explain the role of folders in Google Cloud&#39;s resource hierarchy and how they help with policy management?&lt;/p&gt;&lt;/div&gt;" tooltip="Folders play an important role in Google Cloud&#39;s resource hierarchy and can help with policy management in the following ways:&#xa;&#xa;    Grouping Resources: Folders allow you to group projects and other folders together. This helps you organize your resources in a hierarchical structure that aligns with your organization&#39;s needs. For example, you can create folders based on departments, teams, or specific projects.&#xa;&#xa;    Granular Policy Assignment: Folders enable you to assign policies to resources at a level of granularity you choose. By assigning policies to a folder, all the resources within that folder inherit those policies. This makes it easier to manage and enforce consistent policies across multiple projects and resources.&#xa;&#xa;    Policy Inheritance: Resources within a folder inherit policies and permissions from that folder. This means that if you define a policy at the folder level, it will automatically apply to all the projects and resources within that folder. This inheritance simplifies policy management by eliminating the need to individually assign policies to each resource.&#xa;&#xa;    Delegating Administrative Rights: Folders also provide the ability to delegate administrative rights. You can assign different teams or individuals as administrators of specific folders, allowing them to manage the resources within those folders independently. This delegation of administrative rights promotes collaboration and autonomy within your organization.&#xa;&#xa;    Avoiding Duplication and Errors: By using folders to assign policies, you can avoid duplicating policies across multiple projects. Instead of manually applying the same policies to each project individually, you can place the policies in a common folder. This approach reduces the chances of errors and makes policy management more efficient.&#xa;&#xa;Overall, folders in Google Cloud&#39;s resource hierarchy offer a flexible and scalable way to organize resources, assign policies, and delegate administrative rights. They provide a structured approach to policy management, ensuring consistency and ease of administration across your organization." id="kPhYTnK1E6m5oxsVBe5k-17">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="100" y="80" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;How do policies get managed and applied in Google Cloud, and how does inheritance work?&lt;/p&gt;&lt;/div&gt;" tooltip="In Google Cloud, policies are managed and applied at different levels of the resource hierarchy, including the project, folder, and organization node levels. Here&#39;s how it works:&#xa;&#xa;    Policies at the Project Level: You can define policies specific to a project. These policies apply to all the resources within that project. For example, you can set policies to control access, permissions, and usage quotas for the resources in a project.&#xa;&#xa;    Policies at the Folder Level: Folders allow you to group projects and other folders together. You can assign policies to a folder, and those policies will be inherited by all the resources within that folder. This means that if you apply a policy to a folder, it will also apply to all the projects and resources within that folder.&#xa;&#xa;    Policies at the Organization Node Level: The organization node is the top level of the resource hierarchy. You can define policies at this level, and they will be inherited by all the projects, folders, and resources within the organization. This allows you to set high-level policies that apply to your entire organization.&#xa;&#xa;Inheritance of policies works in a downward manner. This means that policies defined at higher levels in the hierarchy are inherited by the resources at lower levels. For example:&#xa;&#xa;    If you define a policy at the organization node level, it will be inherited by all the projects and folders within that organization.&#xa;    If you define a policy at the folder level, it will be inherited by all the projects and resources within that folder.&#xa;    If you define a policy at the project level, it will apply only to the resources within that specific project.&#xa;&#xa;This hierarchical approach to policy management allows for efficient and consistent application of policies across resources in Google Cloud." id="kPhYTnK1E6m5oxsVBe5k-18">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="100" y="40" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-22" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;labelBackgroundColor=none;endArrow=classic;" edge="1" parent="1" source="kPhYTnK1E6m5oxsVBe5k-19" target="kPhYTnK1E6m5oxsVBe5k-21">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Identity Access &amp;amp; Management" tooltip="The topic of the course &quot;Google Cloud Fundamentals: Core Infrastructure&quot; is about understanding the core concepts and components of Google Cloud. It covers various aspects of cloud computing, such as virtual machines, networks, storage, containers, and applications. The course is designed to provide a foundational understanding of Google Cloud and its infrastructure, allowing learners to gain the necessary knowledge to start using Google Cloud services effectively. By completing this course, learners will be equipped with the fundamental skills needed to work with Google Cloud and explore more advanced topics in cloud computing.&#xa;Swapnil&#xa;&#xa;Explain the topic - &quot;Identity and Access Management (IAM)&quot;&#xa;Coach&#xa;&#xa;Identity and Access Management (IAM) is a crucial aspect of managing resources and access in the cloud. In the context of Google Cloud, IAM allows administrators to control and define who can do what and on which resources within an organization&#39;s cloud environment.&#xa;&#xa;IAM policies are used to specify the permissions and roles assigned to different entities, known as principals, such as Google accounts, Google groups, service accounts, or Cloud Identity domains. Each principal has its own identifier, usually an email address.&#xa;&#xa;IAM roles are collections of permissions that determine what actions a principal can perform on resources. By granting a role to a principal, all the permissions associated with that role are granted as well. For example, to manage virtual machine instances in a project, a role that includes permissions to create, delete, start, stop, and change virtual machines would be assigned.&#xa;&#xa;IAM policies are applied to specific elements of the resource hierarchy, and the policies are inherited by all the elements below in the hierarchy. This allows for granular control over access and permissions.&#xa;&#xa;There are three types of roles in IAM: basic, predefined, and custom. Basic roles, such as owner, editor, viewer, and billing administrator, have broad scopes and affect all resources within a project. Predefined roles are specific to Google Cloud services and offer predefined sets of permissions. Custom roles allow organizations to define roles with specific permissions tailored to their needs.&#xa;&#xa;IAM also supports the use of deny rules, which can prevent certain principals from using specific permissions, regardless of the roles they have been granted. Deny policies are checked before allow policies.&#xa;&#xa;By effectively utilizing IAM, organizations can ensure that their cloud resources are accessed and managed by the right individuals or groups, enhancing security and control over their cloud infrastructure." id="kPhYTnK1E6m5oxsVBe5k-19">
          <mxCell style="whiteSpace=wrap;html=1;fontFamily=Architects Daughter;hachureGap=4;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
            <mxGeometry x="620" y="360" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Questions" tooltip="    What is the purpose of Identity and Access Management (IAM) in the context of cloud computing?&#xa;    What are the different types of principals that can be assigned roles and permissions in IAM?&#xa;    How are IAM policies used to control access to resources in Google Cloud?&#xa;    What is the difference between a principal and a role in IAM?&#xa;    Explain the concept of permissions and how they are associated with roles in IAM.&#xa;    What is the order in which IAM policies are evaluated when determining access to resources?&#xa;    Describe the three types of roles available in IAM: basic, predefined, and custom.&#xa;    How can deny rules be used in IAM to restrict access to certain permissions?&#xa;    What are some best practices for managing access and permissions using IAM?&#xa;    How does IAM help organizations implement the principle of least privilege in their cloud environments?&#xa;&#xa;&#xa;Here are some conceptual and tricky questions to test your understanding of Identity and Access Management (IAM):&#xa;&#xa;    Can a principal have multiple roles assigned to them in IAM? If so, how are the permissions from these roles combined?&#xa;    What is the difference between a basic role and a predefined role in IAM? Provide examples of each.&#xa;    In IAM, what is the purpose of using custom roles instead of predefined roles? When would you choose to create a custom role?&#xa;    How does IAM handle conflicts between allow and deny policies? Explain the order in which these policies are evaluated.&#xa;    Can IAM policies be applied at different levels of the resource hierarchy in Google Cloud? If so, how does this affect the inheritance of permissions?&#xa;    What are some best practices for managing IAM policies to ensure security and least privilege in a cloud environment?&#xa;    How does IAM integrate with other Google Cloud services, such as Compute Engine or Cloud Storage? Provide examples of how IAM can be used to control access to these services.&#xa;    What are service accounts in IAM, and how are they different from regular user accounts? When would you use a service account?&#xa;    Explain the concept of IAM conditions and how they can be used to further refine access control in Google Cloud.&#xa;    Can IAM policies be used to control access to resources outside of Google Cloud, such as on-premises systems or third-party services? If so, how?&#xa;" id="kPhYTnK1E6m5oxsVBe5k-21">
          <mxCell style="rhombus;whiteSpace=wrap;html=1;fontFamily=Architects Daughter;hachureGap=4;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
            <mxGeometry x="640" y="200" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-33" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;labelBackgroundColor=none;endArrow=classic;" edge="1" parent="1" source="kPhYTnK1E6m5oxsVBe5k-24" target="kPhYTnK1E6m5oxsVBe5k-32">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Service Accounts" tooltip="Coach&#xa;&#xa;Service accounts are an important concept in Google Cloud Platform (GCP) and are covered in the course &quot;Google Cloud Fundamentals: Core Infrastructure.&quot; Here&#39;s an explanation of service accounts:&#xa;&#xa;    Service accounts are used to give permissions to a Compute Engine virtual machine (VM) or an application running in a VM, rather than to a person.&#xa;    They are named with an email address and are used to authenticate the VM or application to access resources in GCP.&#xa;    Service accounts use cryptographic keys instead of passwords to access resources.&#xa;    For example, if you have an application running in a VM that needs to store data in Cloud Storage, you can create a service account to authenticate that VM to Cloud Storage.&#xa;    Service accounts can be granted specific roles or permissions to access and manage resources in GCP.&#xa;    They can also have their own IAM (Identity and Access Management) policies attached to them, allowing different users to have different levels of access to the service account.&#xa;    Service accounts need to be managed, and different users can have different roles or permissions for managing them." id="kPhYTnK1E6m5oxsVBe5k-24">
          <mxCell style="whiteSpace=wrap;html=1;fontFamily=Architects Daughter;hachureGap=4;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
            <mxGeometry x="780" y="720" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;How does Cloud Identity integrate with existing Active Directory or LDAP systems?&lt;/p&gt;&lt;/div&gt;" tooltip="Cloud Identity integrates with existing Active Directory or LDAP systems by allowing administrators to use the same usernames and passwords they already use in these systems to manage Google Cloud resources. Here&#39;s how the integration works:&#xa;&#xa;    Single Sign-On (SSO): Cloud Identity supports SSO, which means that users can log in to Google Cloud services using their existing Active Directory or LDAP credentials. This eliminates the need for separate usernames and passwords, providing a seamless login experience.&#xa;&#xa;    User Provisioning: Cloud Identity can synchronize user accounts and groups from Active Directory or LDAP systems to the Google Admin Console. This ensures that user information remains up to date and consistent across both systems.&#xa;&#xa;    Password Sync: Cloud Identity can synchronize password changes made in Active Directory or LDAP systems to Google Cloud. This means that when a user changes their password in the existing system, the new password will be automatically updated in Google Cloud as well.&#xa;&#xa;    User Lifecycle Management: Cloud Identity allows administrators to manage user accounts and groups using the Google Admin Console, even if the user information originates from Active Directory or LDAP systems. This provides a centralized and consistent way to manage user access to Google Cloud resources.&#xa;&#xa;By integrating with existing Active Directory or LDAP systems, Cloud Identity simplifies user management and ensures a seamless experience for administrators and users. It leverages the existing infrastructure and credentials, making it easier to manage user access in Google Cloud while maintaining consistency and security." id="kPhYTnK1E6m5oxsVBe5k-28">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="300" y="960" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;How does Cloud Identity help address the challenge of managing user access in Google Cloud?&lt;/p&gt;&lt;/div&gt;" tooltip="Cloud Identity helps address the challenge of managing user access in Google Cloud by providing a centralized and efficient way to manage user identities and access to cloud resources. Here&#39;s how it helps:&#xa;&#xa;    Centralized User Management: Cloud Identity allows organizations to define policies and manage users and groups using the Google Admin Console. This means that administrators can use familiar tools and workflows to manage user access, making it easier to control and monitor who has access to cloud resources.&#xa;&#xa;    Integration with Existing Systems: Cloud Identity integrates with existing Active Directory or LDAP systems, allowing administrators to use the same usernames and passwords for managing Google Cloud resources. This integration streamlines the user management process and eliminates the need for separate credentials, making it more convenient for administrators and users.&#xa;&#xa;    Immediate Access Revocation: When someone leaves the organization, Cloud Identity enables administrators to disable their account and remove them from groups using the Google Admin Console. This ensures that their access to cloud resources is immediately revoked, reducing the risk of unauthorized access.&#xa;&#xa;    Granular Access Control: Cloud Identity allows administrators to define fine-grained access policies for different users and groups. This means that organizations can enforce access controls based on specific roles and responsibilities, ensuring that users only have access to the resources they need.&#xa;&#xa;    Mobile Device Management: The premium edition of Cloud Identity provides capabilities for managing mobile devices. This allows organizations to enforce security policies, manage device settings, and remotely wipe data if necessary, enhancing the overall security of cloud resources.&#xa;&#xa;By providing these features, Cloud Identity simplifies and strengthens the management of user access in Google Cloud, making it easier for organizations to maintain control and security over their cloud resources." id="kPhYTnK1E6m5oxsVBe5k-29">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="300" y="920" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="&lt;div class=&quot;coach-client coach-message-text css-soikf9&quot;&gt;&lt;p&gt;How do service accounts use cryptographic keys to authenticate virtual machines?&lt;/p&gt;&lt;/div&gt;" tooltip="Service accounts in Google Cloud Platform (GCP) use cryptographic keys to authenticate virtual machines (VMs) and establish secure communication with cloud resources. Here&#39;s how it works:&#xa;&#xa;    Key Generation: When you create a service account, GCP generates a pair of cryptographic keys for that account. This pair consists of a private key and a public key.&#xa;&#xa;    Private Key: The private key is securely stored and managed by GCP. It is used by the VM to sign requests and prove its identity.&#xa;&#xa;    Public Key: The public key is associated with the service account and is used by GCP to verify the authenticity of the VM&#39;s requests.&#xa;&#xa;    Authentication Process: When the VM needs to access a cloud resource, it includes its service account&#39;s email address and signs the request using its private key.&#xa;&#xa;    Verification: GCP receives the request and uses the associated service account&#39;s public key to verify the signature. If the signature is valid, GCP knows that the request is coming from an authenticated VM.&#xa;&#xa;    Access Control: Once the VM is authenticated, GCP checks the permissions assigned to the service account and determines whether the VM has the necessary access to the requested resource.&#xa;&#xa;By using cryptographic keys, service accounts ensure secure authentication and authorization of VMs to access cloud resources. This mechanism helps maintain the integrity and confidentiality of the communication between the VM and GCP services.&#xa;" id="kPhYTnK1E6m5oxsVBe5k-30">
          <mxCell style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;fillStyle=solid;direction=west;gradientDirection=north;shadow=1;size=20;pointerEvents=1;hachureGap=4;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;" vertex="1" parent="1">
            <mxGeometry x="660" y="1040" width="360" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Questions" tooltip="Here are a few conceptual and tricky questions to check your understanding of service accounts:&#xa;&#xa;    Question: Can a service account be used to authenticate multiple virtual machines?&#xa;        Answer: Yes, a service account can be associated with multiple virtual machines. This allows multiple VMs to authenticate and access cloud resources using the same service account&#39;s credentials.&#xa;&#xa;    Question: Can a service account have its own set of permissions and access controls?&#xa;        Answer: Yes, service accounts are considered as resources in Google Cloud Platform (GCP) and can have their own Identity and Access Management (IAM) policies attached to them. This means you can grant specific roles and permissions to a service account, controlling what actions it can perform on cloud resources.&#xa;&#xa;    Question: Can a service account be used to access resources in different projects within GCP?&#xa;        Answer: Yes, a service account can be granted access to resources in different projects within GCP. By managing IAM policies and granting appropriate roles, you can control the cross-project access of a service account.&#xa;&#xa;    Question: Can a service account be used to authenticate applications running outside of Google Cloud Platform?&#xa;        Answer: Yes, service accounts can be used to authenticate applications running outside of GCP. GCP provides a way to generate and manage service account keys, which can be used by applications to authenticate and access cloud resources using the service account&#39;s credentials.&#xa;&#xa;    Question: Can a service account be used to authenticate access to Google Cloud APIs?&#xa;        Answer: Yes, service accounts are commonly used to authenticate access to Google Cloud APIs. By granting the necessary roles and permissions to a service account, you can control its access to specific APIs and services within GCP.&#xa;Here are some practice questions to test your understanding of service accounts:&#xa;&#xa;    Question: What is the purpose of a service account in Google Cloud Platform?&#xa;        Answer: A service account is used to authenticate applications or services running in virtual machines or other systems to access cloud resources in Google Cloud Platform.&#xa;&#xa;    Question: How are service accounts authenticated in Google Cloud Platform?&#xa;        Answer: Service accounts are authenticated using cryptographic keys. They use a private key to sign requests and a public key to verify the authenticity of the requests.&#xa;&#xa;    Question: Can a service account have its own set of permissions and access controls?&#xa;        Answer: Yes, service accounts are considered as resources in Google Cloud Platform and can have their own Identity and Access Management (IAM) policies attached to them. This allows for granular control over the permissions and access of a service account.&#xa;&#xa;    Question: Can a service account be used to authenticate access to resources in different projects within Google Cloud Platform?&#xa;        Answer: Yes, a service account can be granted access to resources in different projects within Google Cloud Platform. By managing IAM policies and granting appropriate roles, cross-project access can be controlled.&#xa;&#xa;    Question: How are service accounts different from regular Google accounts?&#xa;        Answer: Service accounts are used for machine-to-machine communication and are not intended for interactive use by humans. Regular Google accounts, on the other hand, are used by individuals to access various Google services.&#xa;&#xa;" id="kPhYTnK1E6m5oxsVBe5k-32">
          <mxCell style="rhombus;whiteSpace=wrap;html=1;fontFamily=Architects Daughter;hachureGap=4;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
            <mxGeometry x="800" y="840" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-37" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;labelBackgroundColor=none;endArrow=classic;" edge="1" parent="1" source="kPhYTnK1E6m5oxsVBe5k-34" target="kPhYTnK1E6m5oxsVBe5k-36">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Cloud Identity" tooltip="Cloud Identity is a tool provided by Google Cloud that allows organizations to centrally manage user identities and access to cloud resources. It helps address the challenge of managing user access when using Google Cloud services. With Cloud Identity, organizations can define policies and manage users and groups using the Google Admin Console. This means that administrators can log in and manage Google Cloud resources using the same usernames and passwords they already use in existing Active Directory or LDAP systems.&#xa;&#xa;One of the key benefits of Cloud Identity is the ability to easily remove a user&#39;s access to cloud resources when they leave the organization. Administrators can use the Google Admin Console to disable their account and remove them from groups, ensuring that their access is immediately revoked.&#xa;&#xa;Cloud Identity is available in both a free edition and a premium edition. The premium edition provides additional capabilities, such as managing mobile devices. If you are a Google Cloud customer who is also a Google Workspace customer, you already have access to this functionality in the Google Admin Console.&#xa;&#xa;Overall, Cloud Identity helps organizations manage user identities and access to cloud resources more effectively, providing a centralized and secure way to control user access within the Google Cloud platform." id="kPhYTnK1E6m5oxsVBe5k-34">
          <mxCell style="whiteSpace=wrap;html=1;fontFamily=Architects Daughter;hachureGap=4;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
            <mxGeometry x="420" y="720" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Questions" tooltip="    Can you explain the difference between Cloud Identity and Google Workspace (formerly G Suite)?&#xa;    How does Cloud Identity handle user access when an organization has multiple Google Cloud projects?&#xa;    What are the advantages of using Cloud Identity over managing user access directly through a Gmail account?&#xa;    Can you describe the process of integrating Cloud Identity with an existing Active Directory or LDAP system?&#xa;    What are some best practices for managing user access and permissions using Cloud Identity?&#xa;    How does Cloud Identity handle user authentication and authorization for different Google Cloud services?&#xa;    Can you explain the role of Cloud Identity in enforcing security policies and compliance requirements within an organization?&#xa;    What are the limitations or challenges that organizations may face when implementing Cloud Identity?&#xa;    Can you provide an example of a scenario where Cloud Identity would be particularly beneficial for an organization?&#xa;    How does Cloud Identity support multi-factor authentication (MFA) and what are the benefits of using MFA in the context of user access management?&#xa;&#xa;&#xa;    What is the purpose of Cloud Identity in Google Cloud?&#xa;    How does Cloud Identity help address the challenge of managing user access in Google Cloud?&#xa;    What are the benefits of integrating Cloud Identity with existing Active Directory or LDAP systems?&#xa;    How does Cloud Identity enable centralized user management in Google Cloud?&#xa;    What are the key features of Cloud Identity that help organizations manage user access effectively?&#xa;    How does Cloud Identity ensure immediate access revocation when someone leaves an organization?&#xa;    What is the difference between the free edition and premium edition of Cloud Identity?&#xa;    How does Cloud Identity support single sign-on (SSO) for Google Cloud services?&#xa;    What are the steps involved in synchronizing user accounts and groups from Active Directory or LDAP systems to the Google Admin Console using Cloud Identity?&#xa;    How does Cloud Identity enhance security in Google Cloud, especially in terms of mobile device management?&#xa;" id="kPhYTnK1E6m5oxsVBe5k-36">
          <mxCell style="rhombus;whiteSpace=wrap;html=1;fontFamily=Architects Daughter;hachureGap=4;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
            <mxGeometry x="440" y="840" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="kPhYTnK1E6m5oxsVBe5k-41" value="" style="edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=0;hachureGap=4;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=default;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;labelBackgroundColor=none;endArrow=classic;" edge="1" parent="1" source="kPhYTnK1E6m5oxsVBe5k-38" target="kPhYTnK1E6m5oxsVBe5k-40">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="Interacting with Google Cloud" tooltip="Interacting with Google Cloud refers to the various ways in which you can access and work with Google Cloud services and resources. It involves using different tools and interfaces to manage, deploy, and control your applications and infrastructure on Google Cloud. Here are the four main ways to interact with Google Cloud:&#xa;&#xa;    Google Cloud Console: It is a web-based graphical user interface (GUI) that allows you to easily deploy, scale, and diagnose production issues. With the Cloud Console, you can manage your resources, check their health, set budgets, and connect to instances via SSH in the browser.&#xa;&#xa;    Cloud SDK and Cloud Shell: The Cloud SDK is a set of tools that you can use to manage resources and applications hosted on Google Cloud. It includes the Google Cloud CLI and other utilities. Cloud Shell provides command-line access to cloud resources directly from a browser, making it easy to manage projects and resources.&#xa;&#xa;    Application Programming Interfaces (APIs): Google Cloud services offer APIs that allow you to control them programmatically. The Cloud Console includes the Google APIs Explorer, which shows available APIs and versions. Google also provides Cloud Client libraries and Google API Client libraries in various programming languages to simplify calling Google Cloud from your code.&#xa;&#xa;    Google Cloud app: This app allows you to start, stop, and connect to Compute Engine instances, view logs, manage Cloud SQL instances, and administer applications deployed on App Engine. It also provides billing information, customizable graphs, alerts, and incident management.&#xa;&#xa;These different methods of interaction provide flexibility and options for developers, administrators, and users to effectively work with Google Cloud services and resources." id="kPhYTnK1E6m5oxsVBe5k-38">
          <mxCell style="whiteSpace=wrap;html=1;fontFamily=Architects Daughter;hachureGap=4;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
            <mxGeometry x="100" y="720" width="120" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="Questions" tooltip="    Can you explain the difference between the Google Cloud Console and the Cloud SDK?&#xa;    How does Cloud Shell provide a persistent home directory for managing Google Cloud projects and resources?&#xa;    What are some advantages of using APIs to interact with Google Cloud services instead of relying solely on the Cloud Console?&#xa;    How would you go about integrating Google Cloud services into your own application using the available client libraries?&#xa;    Can you provide an example of how you would use the Google Cloud app to troubleshoot and diagnose issues with a Compute Engine instance?&#xa;    What are some best practices for managing and controlling costs when using the Cloud Console?&#xa;    How would you use the Cloud SDK to automate the deployment of resources on Google Cloud?&#xa;    Can you explain the process of authenticating and authorizing API calls when interacting with Google Cloud services programmatically?&#xa;    What are some considerations to keep in mind when using the Cloud Console to manage large-scale deployments on Google Cloud?&#xa;    How would you use the Google APIs Explorer to explore and test different APIs available in Google Cloud?&#xa;&#xa;    What is the purpose of the Google Cloud Console?&#xa;    How does Cloud Shell provide command-line access to cloud resources?&#xa;    What are the main components of the Cloud SDK?&#xa;    How can you access and interact with Google Cloud services programmatically?&#xa;    What is the role of the Google APIs Explorer in interacting with Google Cloud?&#xa;    How do Cloud Client libraries and Google API Client libraries simplify calling Google Cloud from your code?&#xa;    What functionalities does the Google Cloud app provide for managing Compute Engine instances and Cloud SQL instances?&#xa;    How can you monitor key metrics and set up alerts for your Google Cloud projects using the Google Cloud app?&#xa;    What are the benefits of using the Cloud SDK and Cloud Shell for managing Google Cloud projects and resources?&#xa;    How does the Cloud Console help you manage and control your Google Cloud resources?&#xa;" id="kPhYTnK1E6m5oxsVBe5k-40">
          <mxCell style="rhombus;whiteSpace=wrap;html=1;fontFamily=Architects Daughter;hachureGap=4;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
            <mxGeometry x="120" y="880" width="80" height="80" as="geometry" />
          </mxCell>
        </UserObject>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="3d2171pwKwJXhDm0mE4J" name="Virtual Machines &amp; Networks in the Cloud">
    <mxGraphModel dx="2924" dy="1182" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="e34jxlxm3t9zBZB5Ybeu-1" value="&lt;div style=&quot;font-size: 15px;&quot;&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;Virtual Machines &amp;amp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px;&quot;&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;Networks&lt;/font&gt;&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;shadow=1;hachureGap=4;fillStyle=solid;pointerEvents=1;align=center;verticalAlign=middle;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;labelBackgroundColor=none;gradientDirection=north;" vertex="1" parent="1">
          <mxGeometry x="-120" y="520" width="240" height="80" as="geometry" />
        </mxCell>
        <mxCell id="e34jxlxm3t9zBZB5Ybeu-2" value="&lt;div&gt;&lt;h3 class=&quot;css-13hhzop&quot; tabindex=&quot;-1&quot;&gt;Learning Objectives&lt;/h3&gt;&lt;hr class=&quot;cds-2511 cds-Divider-dark css-yc753g&quot; aria-hidden=&quot;true&quot;&gt;&lt;ul&gt;&lt;li data-collapsible=&quot;false&quot;&gt;Deploy a basic infrastructure to Google Cloud.&lt;/li&gt;&lt;li data-collapsible=&quot;false&quot;&gt;Explore how Cloud Load Balancing functions in Google Cloud.&lt;/li&gt;&lt;li data-collapsible=&quot;false&quot;&gt;Detail important VPC compatibilities including routing tables, firewalls and VPC peering.&lt;/li&gt;&lt;li data-collapsible=&quot;true&quot;&gt;Identify the purpose of and use cases for Google Compute Engine.&lt;/li&gt;&lt;li data-collapsible=&quot;true&quot;&gt;Explore the basics of networking in Google Cloud.&lt;/li&gt;&lt;li data-collapsible=&quot;true&quot;&gt;Outline how Google Compute Engine can scale.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=12;fontColor=default;labelBackgroundColor=none;" vertex="1" parent="1">
          <mxGeometry x="-840" width="560" height="190" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
